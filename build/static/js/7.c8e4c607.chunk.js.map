{"version":3,"sources":["demo/util.js","demo/image/sky.jpg","demo/image/circle.gif","demo/Demo10.js"],"names":["__webpack_require__","d","__webpack_exports__","glsl","loadImageList","getPosition","createVertexList","createRotateZMatrix","createTranslateMatrix","createScaleMatrix","x","loadImage","src","Promise","resolve","reject","image","Image","onload","onerror","error","list","arguments","length","undefined","all","map","getX","rect","clientX","left","width","getY","clientY","height","top","canvas","event","getBoundingClientRect","Float32Array","flat","Infinity","createMatrix","sourceList","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","array","value","push","err","return","radian","Math","PI","sinB","sin","cosB","cos","y","z","scaleX","scaleY","scaleZ","module","exports","p","Demo02","ref","useRef","useEffect","current","gl","getContext","viewport","renderCube","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","raf","f","timer","render","requestAnimationFrame","cancelAnimationFrame","_ref2","Object","D_Users_Jade_Documents_code_github_learn_webgl_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","D_Users_Jade_Documents_code_github_learn_webgl_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","mark","_callee2","cube","params","gui","wrap","_context2","prev","makeCube","sent","fovy","near","far","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","dat","name","add","step","abrupt","projection","mat4","create","modelview","mvp","perspective","lookAt","scale","multiply","enable","DEPTH_TEST","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","stop","_x2","apply","this","_ref3","_callee3","VSHADER_SOURCE","FSHADER_SOURCE","program","color","colors","vertexList","uniform","attribute","FSIZE","vertexVBO","indexList","indexVBO","_context3","_templateObject","_templateObject2","makeProgram","vertex","fragment","r","g","b","n","getUniform","getAttribute","BYTES_PER_ELEMENT","makeVBO","type","ARRAY_BUFFER","enableAttributes","location","aPosition","size","stride","offset","aColor","Uint8Array","ELEMENT_ARRAY_BUFFER","mvpMatrix","bindBuffer","useProgram","uniformMatrix4fv","uMvpMatrix","drawElements","TRIANGLES","UNSIGNED_BYTE","_x3","source","vshader","createShader","VERTEX_SHADER","fshader","FRAGMENT_SHADER","createProgram","shader","attachShader","linkProgram","message","getProgramInfoLog","Error","_ref8","shaderSource","compileShader","getShaderInfoLog","_ref9","_ref9$usage","usage","STATIC_DRAW","buffer","createBuffer","bufferData","bufferType","VBO","args","forEach","_params$type","FLOAT","_params$normalized","normalized","vertexAttribPointer","enableVertexAttribArray","count","getProgramParameter","ACTIVE_UNIFORMS","i","info","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation"],"mappings":"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","file":"static/js/7.c8e4c607.chunk.js","sourcesContent":["export const glsl = x => x\r\n\r\nexport const loadImage = src => {\r\n  return new Promise((resolve, reject) => {\r\n    let image = new Image()\r\n    image.onload = () => resolve(image)\r\n    image.onerror = error => reject(error)\r\n    image.src = src\r\n  })\r\n}\r\n\r\nexport const loadImageList = (list = []) => {\r\n  return Promise.all(list.map(loadImage))\r\n}\r\n\r\nexport const getX = (rect, clientX) => {\r\n  return (clientX - rect.left - rect.width / 2) / (rect.width / 2)\r\n}\r\n\r\nexport const getY = (rect, clientY) => {\r\n  return (rect.height / 2 - (clientY - rect.top)) / (rect.height / 2)\r\n}\r\n\r\nexport const getPosition = (canvas, event) => {\r\n  let rect = canvas.getBoundingClientRect()\r\n  return [getX(rect, event.clientX), getY(rect, event.clientY)]\r\n}\r\n\r\nexport const createVertexList = (list = []) => {\r\n  return new Float32Array(list.flat(Infinity))\r\n}\r\n\r\n/**\r\n * [\r\n *    [1, 2, 3, 4],\r\n *    [5, 6, 7, 8],\r\n *    [9, 10, 11, 12],\r\n *    [13, 14, 15, 16]\r\n * ]\r\n */\r\nexport const createMatrix = sourceList => {\r\n  let data = [[], [], [], []]\r\n\r\n  for (let array of sourceList) {\r\n    data[0].push(array[0])\r\n    data[1].push(array[1])\r\n    data[2].push(array[2])\r\n    data[3].push(array[3])\r\n  }\r\n\r\n  return new Float32Array(data.flat())\r\n}\r\n\r\nexport const createRotateZMatrix = (angle = 0) => {\r\n  let radian = (angle * Math.PI) / 180\r\n  let sinB = Math.sin(radian)\r\n  let cosB = Math.cos(radian)\r\n\r\n  return createMatrix([\r\n    [cosB, -sinB, 0.0, 0.0],\r\n    [sinB, cosB, 0.0, 0.0],\r\n    [0.0, 0.0, 1.0, 0.0],\r\n    [0.0, 0.0, 0.0, 1.0]\r\n  ])\r\n}\r\n\r\nexport const createTranslateMatrix = (x = 0, y = 0, z = 0) => {\r\n  return createMatrix([\r\n    [1.0, 0.0, 0.0, x],\r\n    [0.0, 1.0, 0.0, y],\r\n    [0.0, 0.0, 1.0, z],\r\n    [0.0, 0.0, 0.0, 1.0]\r\n  ])\r\n}\r\n\r\nexport const createScaleMatrix = (scaleX = 1, scaleY = 1, scaleZ = 1) => {\r\n  return createMatrix([\r\n    [scaleX, 0.0, 0.0, 0],\r\n    [0, scaleY, 0, 0],\r\n    [0, 0, scaleZ, 0],\r\n    [0, 0, 0, 1]\r\n  ])\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/sky.2b11efd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/circle.def06678.gif\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport { mat4, vec3 } from 'gl-matrix'\r\nimport * as dat from 'dat.gui'\r\nimport { loadImageList, glsl, createVertexList } from './util'\r\nimport skyImageSrc from './image/sky.jpg'\r\nimport circleImageSrc from './image/circle.gif'\r\n\r\nexport default function Demo02() {\r\n  let ref = useRef()\r\n\r\n  useEffect(() => {\r\n    let canvas = ref.current\r\n    let gl = canvas.getContext('webgl')\r\n    gl.viewport(0, 0, canvas.width, canvas.height)\r\n    renderCube(gl)\r\n  }, [])\r\n\r\n  return <canvas width={400} height={400} ref={ref} />\r\n}\r\n\r\nconst raf = f => {\r\n  let timer = null\r\n  let render = () => {\r\n    f()\r\n    timer = requestAnimationFrame(render)\r\n  }\r\n  render()\r\n  return () => cancelAnimationFrame(timer)\r\n}\r\n\r\nconst renderItem = async gl => {\r\n  let angle = 0\r\n  let item = await makeItem(gl)\r\n  return raf(() => {\r\n    let radian = ((angle % 360) * Math.PI) / 180\r\n    let axis = vec3.fromValues(0, 0, 1)\r\n    let props = {\r\n      radian,\r\n      axis\r\n    }\r\n\r\n    gl.clearColor(0, 0, 0, 1)\r\n    gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n    item.render(props)\r\n    angle += 1\r\n  })\r\n}\r\n\r\nconst renderCube = async gl => {\r\n  let cube = await makeCube(gl)\r\n  let params = {\r\n    fovy: 30,\r\n    near: 1,\r\n    far: 100,\r\n    eyeX: 3,\r\n    eyeY: 3,\r\n    eyeZ: 7,\r\n    centerX: 0,\r\n    centerY: 0,\r\n    centerZ: 0,\r\n    upX: 0,\r\n    upY: 1,\r\n    upZ: 0,\r\n    scaleX: 1,\r\n    scaleY: 1,\r\n    scaleZ: 1\r\n  }\r\n\r\n  let gui = new dat.GUI({ name: 'cube' })\r\n\r\n  gui.add(params, 'fovy', 0, 90)\r\n  gui.add(params, 'near', 1, 1000)\r\n  gui.add(params, 'far', 0, 1000)\r\n  gui.add(params, 'eyeX', -10, 100)\r\n  gui.add(params, 'eyeY', -10, 100)\r\n  gui.add(params, 'eyeZ', -10, 100)\r\n  gui.add(params, 'centerX', -1, 1)\r\n  gui.add(params, 'centerY', -1, 1)\r\n  gui.add(params, 'centerZ', -1, 1)\r\n  gui.add(params, 'upX', -10, 10)\r\n  gui.add(params, 'upY', -10, 10)\r\n  gui.add(params, 'upZ', -10, 10)\r\n  gui.add(params, 'scaleX', 0, 10).step(0.1)\r\n  gui.add(params, 'scaleY', 0, 10).step(0.1)\r\n  gui.add(params, 'scaleZ', 0, 10).step(0.1)\r\n\r\n  return raf(() => {\r\n    let projection = mat4.create()\r\n    let modelview = mat4.create()\r\n    let mvp = mat4.create()\r\n\r\n    mat4.perspective(\r\n      projection,\r\n      (params.fovy * Math.PI) / 180,\r\n      1,\r\n      params.near,\r\n      params.far\r\n    )\r\n\r\n    mat4.lookAt(\r\n      modelview,\r\n      [params.eyeX, params.eyeY, params.eyeZ],\r\n      [params.centerX, params.centerY, params.centerZ],\r\n      [params.upX, params.upY, params.upZ]\r\n    )\r\n\r\n    mat4.scale(modelview, modelview, [\r\n      params.scaleX,\r\n      params.scaleY,\r\n      params.scaleZ\r\n    ])\r\n    \r\n    mat4.multiply(mvp, projection, modelview)\r\n\r\n    gl.enable(gl.DEPTH_TEST)\r\n    gl.clearColor(0, 0, 0, 1)\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n    cube.render(mvp)\r\n  })\r\n}\r\n\r\nconst makeCube = async gl => {\r\n  let VSHADER_SOURCE = glsl`\r\n    attribute vec4 aPosition;\r\n    attribute vec4 aColor;\r\n    uniform mat4 uMvpMatrix;\r\n    varying vec4 vColor;\r\n    void main() {\r\n      gl_Position = uMvpMatrix * aPosition;\r\n      vColor = aColor;\r\n    }\r\n  `\r\n\r\n  let FSHADER_SOURCE = glsl`\r\n    precision mediump float;\r\n    varying vec4 vColor;\r\n    void main() {\r\n      gl_FragColor = vColor;\r\n    }\r\n  `\r\n\r\n  let program = makeProgram(gl, {\r\n    vertex: VSHADER_SOURCE,\r\n    fragment: FSHADER_SOURCE\r\n  })\r\n\r\n  let color = (r, g, b) => [r, g, b].map(n => n / 255)\r\n\r\n  let colors = [\r\n    color(161, 98, 247),\r\n    color(111, 136, 254),\r\n    color(69, 227, 255),\r\n    color(92, 127, 167),\r\n    color(82, 140, 162),\r\n    color(165, 222, 141),\r\n    color(240, 74, 76),\r\n    color(62, 97, 155),\r\n    color(15, 107, 172),\r\n    color(37, 139, 214),\r\n    color(133, 183, 254),\r\n    color(198, 206, 255)\r\n  ]\r\n\r\n  let vertexList = createVertexList([\r\n    // front\r\n    [-0.5, 0.5, -0.5, colors[0]],\r\n    [-0.5, -0.5, -0.5, colors[0]],\r\n    [0.5, 0.5, -0.5, colors[0]],\r\n    [0.5, -0.5, -0.5, colors[0]],\r\n    // back\r\n    [-0.5, 0.5, 0.5, colors[0]],\r\n    [-0.5, -0.5, 0.5, colors[0]],\r\n    [0.5, 0.5, 0.5, colors[0]],\r\n    [0.5, -0.5, 0.5, colors[0]],\r\n    // top\r\n    [-0.5, 0.5, -0.5, colors[2]],\r\n    [-0.5, 0.5, 0.5, colors[2]],\r\n    [0.5, 0.5, -0.5, colors[2]],\r\n    [0.5, 0.5, 0.5, colors[2]],\r\n    // bottom\r\n    [-0.5, -0.5, -0.5, colors[3]],\r\n    [-0.5, -0.5, 0.5, colors[3]],\r\n    [0.5, -0.5, -0.5, colors[3]],\r\n    [0.5, -0.5, 0.5, colors[3]],\r\n    // left\r\n    [-0.5, 0.5, -0.5, colors[4]],\r\n    [-0.5, -0.5, -0.5, colors[4]],\r\n    [-0.5, 0.5, 0.5, colors[4]],\r\n    [-0.5, -0.5, 0.5, colors[4]],\r\n    // right\r\n    [0.5, 0.5, -0.5, colors[5]],\r\n    [0.5, 0.5, 0.5, colors[5]],\r\n    [0.5, -0.5, -0.5, colors[5]],\r\n    [0.5, -0.5, 0.5, colors[5]]\r\n  ])\r\n\r\n  let uniform = getUniform(gl, program)\r\n  let attribute = getAttribute(gl, program)\r\n\r\n  let FSIZE = vertexList.BYTES_PER_ELEMENT\r\n\r\n  let vertexVBO = makeVBO(gl, {\r\n    type: gl.ARRAY_BUFFER,\r\n    data: vertexList\r\n  })\r\n\r\n  enableAttributes(gl, gl.ARRAY_BUFFER, vertexVBO, [\r\n    {\r\n      location: attribute.aPosition,\r\n      size: 3,\r\n      stride: FSIZE * 6,\r\n      offset: 0\r\n    },\r\n    {\r\n      location: attribute.aColor,\r\n      size: 3,\r\n      stride: FSIZE * 6,\r\n      offset: FSIZE * 3\r\n    }\r\n  ])\r\n\r\n  let indexList = new Uint8Array(\r\n    [\r\n      [0, 1, 2],\r\n      [1, 2, 3],\r\n      [4, 5, 6],\r\n      [5, 6, 7],\r\n      [8, 9, 10],\r\n      [9, 10, 11],\r\n      [12, 13, 14],\r\n      [13, 14, 15],\r\n      [16, 17, 18],\r\n      [17, 18, 19],\r\n      [20, 21, 22],\r\n      [22, 21, 23]\r\n    ].flat(Infinity)\r\n  )\r\n\r\n  let indexVBO = makeVBO(gl, {\r\n    type: gl.ELEMENT_ARRAY_BUFFER,\r\n    data: indexList\r\n  })\r\n\r\n  let render = mvpMatrix => {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexVBO)\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexVBO)\r\n    gl.useProgram(program)\r\n    gl.uniformMatrix4fv(uniform.uMvpMatrix, false, mvpMatrix)\r\n    gl.drawElements(gl.TRIANGLES, indexList.length, gl.UNSIGNED_BYTE, 0)\r\n  }\r\n\r\n  return { render }\r\n}\r\n\r\nconst makeItem = async gl => {\r\n  let VSHADER_SOURCE = glsl`\r\n    attribute vec4 aPosition;\r\n    attribute vec2 aTexCoor;\r\n    uniform mat4 uRotateM;\r\n    varying vec2 vTexCoor;\r\n    void main() {\r\n      gl_Position = uRotateM * aPosition;\r\n      vTexCoor = aTexCoor;\r\n    }\r\n  `\r\n\r\n  let FSHADER_SOURCE = glsl`\r\n    precision mediump float;\r\n    varying vec2 vTexCoor;\r\n    uniform sampler2D uSampler0;\r\n    uniform sampler2D uSampler1;\r\n    void main() {\r\n      vec4 color0 = texture2D(uSampler0, vTexCoor);\r\n      vec4 color1 = texture2D(uSampler1, vTexCoor);\r\n      gl_FragColor = color0 * color1;\r\n    }\r\n  `\r\n\r\n  let program = makeProgram(gl, {\r\n    vertex: VSHADER_SOURCE,\r\n    fragment: FSHADER_SOURCE\r\n  })\r\n\r\n  let uniform = getUniform(gl, program)\r\n  let attribute = getAttribute(gl, program)\r\n\r\n  let vertexList = createVertexList([\r\n    [[-0.5, 0.5], [0.0, 1.0]],\r\n    [[-0.5, -0.5], [0.0, 0.0]],\r\n    [[0.5, 0.5], [1.0, 1.0]],\r\n    [[0.5, -0.5], [1.0, 0.0]]\r\n  ])\r\n\r\n  let FSIZE = vertexList.BYTES_PER_ELEMENT\r\n\r\n  let VBO = makeVBO(gl, {\r\n    type: gl.ARRAY_BUFFER,\r\n    data: vertexList\r\n  })\r\n\r\n  enableAttributes(gl, gl.ARRAY_BUFFER, VBO, [\r\n    {\r\n      location: attribute.aPosition,\r\n      size: 2,\r\n      stride: FSIZE * 4,\r\n      offset: 0\r\n    },\r\n    {\r\n      location: attribute.aTexCoor,\r\n      size: 2,\r\n      stride: FSIZE * 4,\r\n      offset: FSIZE * 2\r\n    }\r\n  ])\r\n\r\n  let imageSrcList = [skyImageSrc, circleImageSrc]\r\n  let [skyImage, circleImage] = await loadImageList(imageSrcList)\r\n\r\n  let useProgram = () => {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, VBO)\r\n    gl.useProgram(program)\r\n  }\r\n\r\n  let useTexture = () => {\r\n    attachTexture2D(gl, {\r\n      unit: 0,\r\n      location: uniform.uSampler0,\r\n      image: {\r\n        source: skyImage,\r\n        format: gl.RGBA,\r\n        type: gl.UNSIGNED_BYTE\r\n      },\r\n      parameters: [\r\n        {\r\n          name: gl.TEXTURE_MIN_FILTER,\r\n          value: gl.LINEAR\r\n        }\r\n      ]\r\n    })\r\n\r\n    attachTexture2D(gl, {\r\n      unit: 1,\r\n      location: uniform.uSampler1,\r\n      image: {\r\n        source: circleImage,\r\n        format: gl.RGBA,\r\n        type: gl.UNSIGNED_BYTE\r\n      },\r\n      parameters: [\r\n        {\r\n          name: gl.TEXTURE_MIN_FILTER,\r\n          value: gl.LINEAR\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  let draw = () => {\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\r\n  }\r\n\r\n  let identityM = mat4.create()\r\n  let rotateM = mat4.create()\r\n  let rotate = async (radian, axis) => {\r\n    mat4.rotate(rotateM, identityM, radian, axis)\r\n    gl.uniformMatrix4fv(uniform.uRotateM, false, rotateM)\r\n  }\r\n\r\n  let render = props => {\r\n    useProgram()\r\n    useTexture()\r\n    rotate(props.radian, props.axis)\r\n    draw()\r\n  }\r\n\r\n  return { render }\r\n}\r\n\r\nconst makeProgram = (gl, source) => {\r\n  let vshader = createShader(gl, {\r\n    type: gl.VERTEX_SHADER,\r\n    source: source.vertex\r\n  })\r\n  let fshader = createShader(gl, {\r\n    type: gl.FRAGMENT_SHADER,\r\n    source: source.fragment\r\n  })\r\n  let program = createProgram(gl, {\r\n    vertex: vshader,\r\n    fragment: fshader\r\n  })\r\n\r\n  return program\r\n}\r\n\r\nconst createProgram = (gl, shader) => {\r\n  let program = gl.createProgram()\r\n\r\n  gl.attachShader(program, shader.vertex)\r\n  gl.attachShader(program, shader.fragment)\r\n  gl.linkProgram(program)\r\n\r\n  let message = gl.getProgramInfoLog(program)\r\n  if (message) throw new Error(message)\r\n  return program\r\n}\r\n\r\nconst createShader = (gl, { type, source }) => {\r\n  let shader = gl.createShader(type)\r\n\r\n  gl.shaderSource(shader, source)\r\n  gl.compileShader(shader)\r\n\r\n  let message = gl.getShaderInfoLog(shader)\r\n  if (message) throw new Error(message)\r\n  return shader\r\n}\r\n\r\nconst makeVBO = (gl, { type, data, usage = gl.STATIC_DRAW }) => {\r\n  let buffer = gl.createBuffer()\r\n  gl.bindBuffer(type, buffer)\r\n  gl.bufferData(type, data, usage)\r\n  // unbind\r\n  gl.bindBuffer(type, null)\r\n  return buffer\r\n}\r\n\r\nconst enableAttributes = (gl, bufferType, VBO, args = []) => {\r\n  gl.bindBuffer(bufferType, VBO)\r\n  args.forEach(params => {\r\n    let {\r\n      location,\r\n      size,\r\n      type = gl.FLOAT,\r\n      normalized = false,\r\n      stride,\r\n      offset\r\n    } = params\r\n    gl.vertexAttribPointer(location, size, type, normalized, stride, offset)\r\n    gl.enableVertexAttribArray(location)\r\n  })\r\n  gl.bindBuffer(bufferType, null)\r\n}\r\n\r\nconst getUniform = (gl, program) => {\r\n  let count = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)\r\n  let uniform = {}\r\n  for (let i = 0; i < count; i++) {\r\n    const info = gl.getActiveUniform(program, i)\r\n    uniform[info.name] = gl.getUniformLocation(program, info.name)\r\n  }\r\n  return uniform\r\n}\r\n\r\nconst getAttribute = (gl, program) => {\r\n  let count = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)\r\n  let attribute = {}\r\n  for (let i = 0; i < count; i++) {\r\n    const info = gl.getActiveAttrib(program, i)\r\n    attribute[info.name] = gl.getAttribLocation(program, info.name)\r\n  }\r\n  return attribute\r\n}\r\n\r\nconst attachTexture2D = (\r\n  gl,\r\n  { location, unit, image, flipY = true, parameters = [] }\r\n) => {\r\n  let texture = gl.createTexture()\r\n\r\n  if (flipY) gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1)\r\n\r\n  gl.activeTexture(gl.TEXTURE0 + unit)\r\n  gl.bindTexture(gl.TEXTURE_2D, texture)\r\n\r\n  parameters.forEach(({ name, value }) => {\r\n    gl.texParameteri(gl.TEXTURE_2D, name, value)\r\n  })\r\n\r\n  image = {\r\n    level: 0,\r\n    format: gl.RGBA,\r\n    type: gl.UNSIGNED_BYTE,\r\n    ...image\r\n  }\r\n\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    image.level,\r\n    image.format,\r\n    image.format,\r\n    image.type,\r\n    image.source\r\n  )\r\n\r\n  gl.uniform1i(location, unit)\r\n\r\n  return texture\r\n}\r\n"],"sourceRoot":""}