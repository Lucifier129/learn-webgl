{"version":3,"sources":["../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/createClass.js","demo/lib/runtime.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/typeof.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/inherits.js","demo/Demo14/ray-tracing.js","demo/Demo14/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","__webpack_require__","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","vec3","require","isVec3","obj","Float32Array","toVec3","n","fromValues","module","exports","_add_","left","right","add","create","_sub_","sub","_mul_","mul","_div_","div","_negate_","operand","negate","_typeof2","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","value","from","x","y","z","dot","vec3a","vec3b","cross","normalize","Ray","a","b","time","arguments","undefined","classCallCheck","this","t","createRecord","normal","Sphere","center","radius","material","ray","tmin","tmax","record","oc","origin","direction","c","discriminant","temp","Math","sqrt","isValid","pointAt","MovingSphere","center1","center2","time1","time2","sphere","setCenter","hit","HitableList","list","tempRecord","hited","closest","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","assign","err","return","_this$list","push","apply","Camera","lookFrom","lookAt","vup","vfov","aspect","aperture","focusDist","theta","PI","halfHeight","tan","halfWidth","w","u","v","lowerLeftCorner","horizontal","vertical","lensRadius","s","rd","randomVec3","random","randomInUnitDisk","offset","AbstractTexture","isTexture","ConstantTexture","color","_this","CheckerTexture","texture0","texture1","_this2","sin","randomInUnitSphere","squaredLength","LambertianMaterial","albedo","ref","input","scattered","attenuation","reflect","MetalMaterial","fuzz","min","reflected","DielectricMaterial","refractIndex","outwardNormal","ni_over_nt","consine","dotResult","refractProb","uv","dt","refracted","refract","r0","pow","schlick","world","depth","Infinity","scatter","start","end","ray_tracing","_ref","_ref$width","width","_ref$height","height","_ref$amount","amount","_ref$lookFrom","_ref$lookAt","_ref$vup","_ref$vfov","_ref$aspect","_ref$focusDist","_ref$aperture","nx","ny","camera","range","floor","checkerTexture","based","chooseMat","randomScene","renderByPosition","getRay","render","regenerator_default","mark","j","_renderByPosition","_renderByPosition2","r","g","wrap","_context","prev","slicedToArray","stop","noop","frame","f","Promise","resolve","requestAnimationFrame","getMSE","listA","listB","sum","incre","step","_args","decre","_args2","_context2","abs","toggle","valueA","valueB","_context3","abrupt","spread","middle","source","_args4","_context4","t0","finish","sortByMSE","current","result","index","sort","toColor","Demo01","_useState","useState","_useState2","setTime","useRef","deubgRef","useEffect","canvas","debugCanvas","ctx","getContext","debugCtx","imageData","createImageData","debugImageData","createRayTracing","data","prevImageData","currImageData","renderCount","innerCount","innerTime","tid","over","renderToCanvas","fillColor","clearRect","putImageData","showDebugInfo","_ray$renderByPosition","_ray$renderByPosition2","_ray$renderByPosition3","asyncToGenerator","_callee","duration","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_args5","_context5","Date","now","t1","scheduleRender","_ref2","_callee2","count","item","_args6","_context6","clearTimeout","_react_16_8_6_react_default","createElement","Fragment","style","background","toFixed"],"mappings":"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","file":"static/js/9.54abd353.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const { vec3 } = require('gl-matrix')\r\n\r\nconst isVec3 = obj => obj instanceof Float32Array\r\nconst toVec3 = n => vec3.fromValues(n, n, n)\r\n\r\nlet _add_ = function(left, right) {\r\n  if (!isVec3(left) && !isVec3(right)) return left + right\r\n\r\n  if (!isVec3(left)) left = toVec3(left)\r\n  if (!isVec3(right)) right = toVec3(right)\r\n\r\n  return vec3.add(vec3.create(), left, right)\r\n}\r\n\r\nlet _sub_ = function(left, right) {\r\n  if (!isVec3(left) && !isVec3(right)) return left - right\r\n\r\n  if (!isVec3(left)) left = toVec3(left)\r\n  if (!isVec3(right)) right = toVec3(right)\r\n\r\n  return vec3.sub(vec3.create(), left, right)\r\n}\r\n\r\nlet _mul_ = function(left, right) {\r\n  if (!isVec3(left) && !isVec3(right)) return left * right\r\n\r\n  if (!isVec3(left)) left = toVec3(left)\r\n  if (!isVec3(right)) right = toVec3(right)\r\n\r\n  return vec3.mul(vec3.create(), left, right)\r\n}\r\n\r\nlet _div_ = function(left, right) {\r\n  if (!isVec3(left) && !isVec3(right)) return left / right\r\n\r\n  if (!isVec3(left)) left = toVec3(left)\r\n  if (!isVec3(right)) right = toVec3(right)\r\n\r\n  return vec3.div(vec3.create(), left, right)\r\n}\r\n\r\nlet _negate_ = function(operand) {\r\n  if (!isVec3(operand)) return -operand\r\n  return vec3.negate(vec3.create(), operand)\r\n}\r\n\r\nmodule.exports = {\r\n  _add_,\r\n  _sub_,\r\n  _mul_,\r\n  _div_,\r\n  _negate_\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","const fs = require('fs');\n\nconst {\n  vec3\n} = require('gl-matrix');\n\nconst {\n  _add_,\n  _sub_,\n  _mul_,\n  _div_,\n  _negate_\n} = require('../lib/runtime');\n\nconst from = (x, y, z) => vec3.fromValues(x, y, z);\n\nconst dot = (vec3a, vec3b) => vec3.dot(vec3a, vec3b);\n\nconst cross = (vec3a, vec3b) => vec3.cross(vec3.create(), vec3a, vec3b);\n\nconst normalize = vec3a => vec3.normalize(vec3.create(), vec3a);\n\nclass Ray {\n  constructor(a, b, time = 0.0) {\n    this.a = a;\n    this.b = b;\n    this.time = time;\n  }\n\n  origin() {\n    return this.a;\n  }\n\n  direction() {\n    return this.b;\n  }\n\n  pointAt(t) {\n    let {\n      a,\n      b\n    } = this;\n    return _add_(a, _mul_(t, b));\n  }\n\n} // linear-blend/linear-interpolation\n\n\nconst lerp = (t, start, end) => _add_(_mul_(_sub_(1.0, t), start), _mul_(t, end));\n\nconst createRecord = () => {\n  return {\n    t: 0,\n    p: vec3.create(),\n    normal: vec3.create()\n  };\n};\n\nclass Sphere {\n  constructor(center, radius, material) {\n    this.center = center;\n    this.radius = radius;\n    this.material = material;\n  }\n\n  setCenter(center) {\n    this.center = center;\n  }\n\n  hit(ray, tmin, tmax, record) {\n    let oc = _sub_(ray.origin(), this.center);\n\n    let a = dot(ray.direction(), ray.direction());\n    let b = dot(oc, ray.direction());\n\n    let c = _sub_(dot(oc, oc), _mul_(this.radius, this.radius));\n\n    let discriminant = _sub_(_mul_(b, b), _mul_(a, c));\n\n    if (discriminant < 0) return false;\n\n    let temp = _div_(_sub_(_negate_(b), Math.sqrt(discriminant)), a);\n\n    let isValid = temp < tmax && temp > tmin;\n\n    if (!isValid) {\n      temp = _div_(_add_(_negate_(b), Math.sqrt(discriminant)), a);\n      isValid = temp < tmax && temp > tmin;\n    }\n\n    if (isValid) {\n      record.t = temp;\n      record.p = ray.pointAt(temp);\n      record.normal = _div_(_sub_(record.p, this.center), this.radius);\n      record.material = this.material;\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nconst getCenterByTime = (center1, center2, time1, time2, time) => {\n  return _add_(center1, _mul_(_div_(_sub_(time, time1), _sub_(time2, time1)), _sub_(center2, center1)));\n};\n\nclass MovingSphere {\n  constructor(center1, center2, time1, time2, radius, material) {\n    this.center1 = center1;\n    this.center2 = center2;\n    this.time1 = time1;\n    this.time2 = time2;\n    this.sphere = new Sphere(center1, radius, material);\n  }\n\n  hit(ray, tmin, tmax, record) {\n    let center = getCenterByTime(this.center1, this.center2, this.time1, this.time2, ray.time);\n    this.sphere.setCenter(center);\n    return this.sphere.hit(ray, tmin, tmax, record);\n  }\n\n}\n\nclass HitableList {\n  constructor(list) {\n    this.list = list;\n  }\n\n  hit(ray, tmin, tmax, record) {\n    let tempRecord = createRecord();\n    let hited = false;\n    let closest = tmax;\n\n    for (let object of this.list) {\n      if (object.hit(ray, tmin, closest, tempRecord)) {\n        hited = true;\n        closest = tempRecord.t;\n        Object.assign(record, tempRecord);\n      }\n    }\n\n    return hited;\n  }\n\n  push(...args) {\n    this.list.push(...args);\n  }\n\n}\n\nconst randomInUnitDisk = () => {\n  let p;\n\n  do {\n    let randomVec3 = from(Math.random(), Math.random(), 0.0);\n    p = _sub_(_mul_(2.0, randomVec3), from(1.0, 1.0, 0.0));\n  } while (dot(p, p) >= 1.0);\n\n  return p;\n};\n\nclass Camera {\n  constructor(lookFrom, lookAt, vup, vfov, aspect, aperture, focusDist, time1, time2) {\n    let theta = _div_(_mul_(vfov, Math.PI), 180);\n\n    let halfHeight = Math.tan(_div_(theta, 2));\n\n    let halfWidth = _mul_(halfHeight, aspect);\n\n    let origin = lookFrom;\n    let w = normalize(_sub_(lookFrom, lookAt));\n    let u = normalize(cross(vup, w));\n    let v = cross(w, u);\n\n    let lowerLeftCorner = _sub_(origin, _mul_(focusDist, _add_(_add_(_mul_(u, halfWidth), _mul_(v, halfHeight)), w)));\n\n    let horizontal = _mul_(_mul_(_mul_(focusDist, 2), u), halfWidth);\n\n    let vertical = _mul_(_mul_(_mul_(focusDist, 2), v), halfHeight);\n\n    this.time1 = time1;\n    this.time2 = time2;\n    this.u = u;\n    this.v = v;\n    this.origin = origin;\n    this.lowerLeftCorner = lowerLeftCorner;\n    this.horizontal = horizontal;\n    this.vertical = vertical;\n    this.lensRadius = _div_(aperture, 2);\n  }\n\n  getRay(s, t) {\n    let {\n      origin,\n      lowerLeftCorner,\n      horizontal,\n      vertical\n    } = this;\n\n    let rd = _mul_(this.lensRadius, randomInUnitDisk());\n\n    let offset = _add_(_mul_(this.u, rd[0]), _mul_(this.v, rd[1]));\n\n    let direction = _sub_(_add_(_add_(lowerLeftCorner, _mul_(s, horizontal)), _mul_(t, vertical)), origin);\n\n    let time = _add_(this.time1, _mul_(Math.random(), _sub_(this.time2, this.time1)));\n\n    let ray = new Ray(_add_(origin, offset), _sub_(direction, offset), time);\n    return ray;\n  }\n\n}\n\nclass AbstractTexture {\n  constructor() {\n    this.isTexture = true;\n  }\n\n}\n\nclass ConstantTexture extends AbstractTexture {\n  constructor(color) {\n    super();\n    this.color = color;\n  }\n\n  value(u, v, p) {\n    return this.color;\n  }\n\n}\n\nclass CheckerTexture extends AbstractTexture {\n  constructor(texture0, texture1) {\n    super();\n    this.texture0 = texture0;\n    this.texture1 = texture1;\n  }\n\n  value(u, v, p) {\n    let sines = _mul_(_mul_(Math.sin(_mul_(10, p[0])), Math.sin(_mul_(10, p[1]))), Math.sin(_mul_(10, p[2])));\n\n    if (sines < 0) {\n      return this.texture1.value(u, v, p);\n    } else {\n      return this.texture0.value(u, v, p);\n    }\n  }\n\n}\n\nconst isTexture = input => !!(input && input.isTexture);\n\nconst randomInUnitSphere = () => {\n  let p;\n\n  do {\n    let randomVec3 = from(Math.random(), Math.random(), Math.random());\n    p = _sub_(_mul_(2.0, randomVec3), from(1.0, 1.0, 1.0));\n  } while (vec3.squaredLength(p) >= 1.0);\n\n  return p;\n};\n\nclass LambertianMaterial {\n  constructor(albedo) {\n    this.albedo = albedo;\n  }\n\n  scatter(ray, record, ref) {\n    let target = _add_(_add_(record.p, record.normal), randomInUnitSphere());\n\n    let direction = _sub_(target, record.p);\n\n    ref.scattered = new Ray(record.p, direction, ray.time);\n    ref.attenuation = isTexture(this.albedo) ? this.albedo.value(0, 0, record.p) : this.albedo;\n    return true;\n  }\n\n}\n\nconst reflect = (v, n) => {\n  return _sub_(v, _mul_(_mul_(2.0, dot(v, n)), n));\n};\n\nclass MetalMaterial {\n  constructor(albedo, fuzz = 1) {\n    this.albedo = albedo;\n    this.fuzz = Math.min(fuzz, 1);\n  }\n\n  scatter(ray, record, ref) {\n    let reflected = reflect(vec3.normalize(vec3.create(), ray.direction()), record.normal);\n    ref.scattered = new Ray(record.p, _add_(reflected, _mul_(this.fuzz, randomInUnitSphere())));\n    ref.attenuation = this.albedo;\n    return dot(ref.scattered.direction(), record.normal) > 0;\n  }\n\n}\n\nconst refract = (v, normal, ni_over_nt, ref) => {\n  let uv = vec3.normalize(vec3.create(), v);\n  let dt = dot(uv, normal);\n\n  let discriminant = _sub_(1.0, _mul_(_mul_(ni_over_nt, ni_over_nt), _sub_(1.0, _mul_(dt, dt))));\n\n  if (discriminant > 0) {\n    ref.refracted = _sub_(_mul_(ni_over_nt, _sub_(uv, _mul_(normal, dt))), _mul_(normal, Math.sqrt(discriminant)));\n    return true;\n  }\n\n  return false;\n};\n\nconst schlick = (consine, refractIndex) => {\n  let r0 = _div_(_sub_(1, refractIndex), _add_(1, refractIndex));\n\n  r0 = _mul_(r0, r0);\n  return _add_(r0, _mul_(_sub_(1, r0), Math.pow(_sub_(1, consine), 5)));\n};\n\nclass DielectricMaterial {\n  constructor(refractIndex) {\n    this.refractIndex = refractIndex;\n  }\n\n  scatter(ray, record, ref) {\n    let outwardNormal = vec3.create();\n    let reflected = reflect(ray.direction(), record.normal);\n    let ni_over_nt = 0.0;\n    let consine = 0.0;\n    ref.attenuation = from(1.0, 1.0, 1.0);\n    let dotResult = dot(ray.direction(), record.normal);\n\n    if (dotResult > 0) {\n      outwardNormal = _negate_(record.normal);\n      ni_over_nt = this.refractIndex;\n      consine = _div_(_mul_(this.refractIndex, dotResult), vec3.length(ray.direction()));\n    } else {\n      outwardNormal = record.normal;\n      ni_over_nt = _div_(1.0, this.refractIndex);\n      consine = _div_(_negate_(dotResult), vec3.length(ray.direction()));\n    }\n\n    let refractProb = 0.0;\n\n    if (refract(ray.direction(), outwardNormal, ni_over_nt, ref)) {\n      refractProb = schlick(consine, this.refractIndex);\n    } else {\n      refractProb = 1.0;\n    }\n\n    if (Math.random() < refractProb) {\n      ref.scattered = new Ray(record.p, reflected);\n    } else {\n      ref.scattered = new Ray(record.p, ref.refracted);\n    }\n\n    return true;\n  }\n\n}\n\nconst color = (ray, world, depth = 0) => {\n  let record = createRecord();\n\n  if (world.hit(ray, 0.001, Infinity, record)) {\n    let ref = {\n      scattered: null,\n      attenuation: 0\n    };\n\n    if (depth >= 50 || !record.material.scatter(ray, record, ref)) {\n      return from(0.0, 0.0, 0.0);\n    }\n\n    return _mul_(ref.attenuation, color(ref.scattered, world, _add_(depth, 1)));\n  }\n\n  let direction = vec3.normalize(vec3.create(), ray.direction());\n  return lerp(_mul_(0.5, _add_(direction[1], 1.0)), from(1.0, 1.0, 1.0), from(0.5, 0.7, 1.0));\n};\n\nconst randomScene = amount => {\n  let list = [];\n  let range = Math.floor(_div_(Math.sqrt(amount), 2));\n\n  let start = _negate_(range);\n\n  let end = +range;\n  let checkerTexture = new CheckerTexture(new ConstantTexture(from(0.2, 0.3, 0.1)), new ConstantTexture(from(0.9, 0.9, 0.9)));\n  list[0] = new Sphere(from(0.0, -1000, 0), 1000, new LambertianMaterial(checkerTexture));\n  let i = 1;\n  let based = from(4.0, 0.2, 0.0);\n\n  for (let a = start; a < end; a++) {\n    for (let b = start; b < end; b++) {\n      let chooseMat = Math.random();\n      let center = from(_add_(a, _mul_(0.9, Math.random())), 0.2, _add_(b, _mul_(0.9, Math.random())));\n\n      if (vec3.length(_sub_(center, based)) > 0.9) {\n        if (chooseMat < 0.8) {\n          let material = new LambertianMaterial(from(_mul_(Math.random(), Math.random()), _mul_(Math.random(), Math.random()), _mul_(Math.random(), Math.random()))); // list[i++] = new Sphere(center, 0.2, material)\n          // continue\n\n          list[i++] = new MovingSphere(center, _add_(center, from(0, _mul_(0.5, Math.random()), 0)), 0.0, 1.0, 0.2, material);\n        } else if (chooseMat < 0.95) {\n          let material = new MetalMaterial(from(_mul_(0.5, _add_(1, Math.random())), _mul_(0.5, _add_(1, Math.random())), _mul_(0.5, _add_(1, Math.random()))), _mul_(0.5, Math.random()));\n          list[i++] = new Sphere(center, 0.2, material);\n        } else {\n          list[i++] = new Sphere(center, 0.2, new DielectricMaterial(1.5));\n        }\n      }\n    }\n  }\n\n  list[i++] = new Sphere(from(0.0, 1.0, 0.0), 1.0, new DielectricMaterial(1.5));\n  list[i++] = new Sphere(from(-4.0, 1.0, 0.0), 1.0, new LambertianMaterial(from(0.4, 0.2, 0.1)));\n  list[i++] = new Sphere(from(4.0, 1.0, 0.0), 1.0, new MetalMaterial(from(0.7, 0.6, 0.5), 0.0));\n  return new HitableList(list);\n};\n\nexport default (({\n  width = 800,\n  height = 400,\n  amount = 2,\n  lookFrom = from(13.0, 2.0, 3.0),\n  lookAt = from(0.0, 0.0, 0.0),\n  vup = from(0.0, 1.0, 0.0),\n  vfov = 20,\n  aspect = _div_(width, height),\n  focusDist = 10,\n  aperture = 0.1\n}) => {\n  let nx = width;\n  let ny = height;\n  let camera = new Camera(lookFrom, lookAt, vup, vfov, aspect, aperture, focusDist, 0.0, 1.0);\n  let world = randomScene(amount);\n\n  let renderByPosition = (x, y) => {\n    let u = _div_(_add_(x, Math.random()), nx);\n\n    let v = _div_(_add_(y, Math.random()), ny);\n\n    let ray = camera.getRay(u, v);\n    return color(ray, world);\n  };\n\n  let render = function* () {\n    for (let j = _sub_(ny, 1); j >= 0; j--) {\n      for (let i = 0; i < nx; i++) {\n        let [r, g, b] = renderByPosition(i, j);\n        let a = 1;\n        yield r;\n        yield g;\n        yield b;\n        yield a;\n      }\n    }\n  };\n\n  return {\n    render,\n    renderByPosition\n  };\n});","import React, { useState, useEffect, useRef } from 'react'\r\nimport createRayTracing from './ray-tracing'\r\n\r\nconst noop = () => {}\r\nconst frame = (f = noop) =>\r\n  new Promise(resolve => {\r\n    requestAnimationFrame(() => {\r\n      f()\r\n      resolve()\r\n    })\r\n  })\r\n\r\nconst getMSE = (listA, listB) => {\r\n  let sum = 0\r\n  for (let i = 0; i < listA.length; i++) {\r\n    sum += Math.pow(listA[i] - listB[i], 2)\r\n  }\r\n  return sum / listA.length\r\n}\r\n\r\nconst incre = function*(start, end, step = 1) {\r\n  while (start <= end) {\r\n    yield start\r\n    start += step\r\n  }\r\n}\r\n\r\nconst decre = function*(start, end, step = -1) {\r\n  while (start >= end) {\r\n    yield start\r\n    start += step\r\n  }\r\n}\r\n\r\nconst range = function(start, end, step = 1) {\r\n  if (start < end) return incre(start, end, Math.abs(step))\r\n  return decre(start, end, -Math.abs(step))\r\n}\r\n\r\nconst toggle = function*(a, b) {\r\n  while (true) {\r\n    let valueA = a.next()\r\n    let valueB = b.next()\r\n    if (valueA.done && valueB.done) break\r\n    if (!valueA.done) yield valueA.value\r\n    if (!valueB.done) yield valueB.value\r\n  }\r\n}\r\n\r\nconst spread = function*(start, end, step = 1) {\r\n  let middle = Math.floor((end - start) / 2)\r\n  let source = toggle(\r\n    range(middle, start, step),\r\n    range(middle + step, end, step)\r\n  )\r\n  for (let v of source) yield v\r\n}\r\n\r\n// mean squared error\r\nconst sortByMSE = (prev, current) => {\r\n  let result = []\r\n\r\n  for (let i = 0; i < prev.length; i += 4) {\r\n    let index = Math.floor(i / 4)\r\n    let listA = [prev[i + 0], prev[i + 1], prev[i + 2], prev[i + 3]]\r\n    let listB = [current[i + 0], current[i + 1], current[i + 2], current[i + 3]]\r\n\r\n    result[index] = {\r\n      index,\r\n      value: getMSE(listA, listB)\r\n    }\r\n  }\r\n\r\n  return result.sort((a, b) => b.value - a.value)\r\n}\r\n\r\nconst toColor = value => {\r\n  return Math.floor(255.99 * Math.sqrt(value))\r\n}\r\n\r\nexport default function Demo01() {\r\n  let [time, setTime] = useState(0)\r\n  let ref = useRef()\r\n  let deubgRef = useRef()\r\n  let width = 800\r\n  let height = 400\r\n\r\n  useEffect(() => {\r\n    let canvas = ref.current\r\n    let debugCanvas = deubgRef.current\r\n    let ctx = canvas.getContext('2d')\r\n    let debugCtx = debugCanvas.getContext('2d')\r\n    let imageData = ctx.createImageData(width, height)\r\n    let debugImageData = debugCtx.createImageData(width, height)\r\n    let ray = createRayTracing({ width, height, amount: 50 })\r\n    let data = new Float32Array(width * height * 4)\r\n    let prevImageData = new Float32Array(width * height * 4)\r\n    let currImageData = new Float32Array(width * height * 4)\r\n    let renderCount = new Float32Array(width * height * 4)\r\n    let innerCount = 1\r\n    let innerTime = 0\r\n    let tid = null\r\n    let over = false\r\n\r\n    let renderToCanvas = () => {\r\n      ctx.fillColor = `rgba(0, 0, 0, 1)`\r\n      ctx.clearRect(0, 0, width, height)\r\n      ctx.putImageData(imageData, 0, 0)\r\n    }\r\n\r\n    let showDebugInfo = () => {\r\n      let data = renderCount\r\n      for (let i = 0; i < data.length; i++) {\r\n        if ((i + 1) % 4 === 0) {\r\n          debugImageData.data[i] = 255\r\n        } else {\r\n          debugImageData.data[i] = data[i]\r\n        }\r\n      }\r\n      debugCtx.clearRect(0, 0, width, height)\r\n      debugCtx.putImageData(debugImageData, 0, 0)\r\n    }\r\n\r\n    let renderByPosition = (x, y) => {\r\n      let [r, g, b, a = 1] = ray.renderByPosition(x, y)\r\n      let i = ((height - 1 - y) * width + x) * 4\r\n\r\n      data[i + 0] += r\r\n      data[i + 1] += g\r\n      data[i + 2] += b\r\n      data[i + 3] += a\r\n\r\n      renderCount[i + 0] += 1\r\n      renderCount[i + 1] += 1\r\n      renderCount[i + 2] += 1\r\n      renderCount[i + 3] += 1\r\n\r\n      prevImageData[i + 0] = imageData.data[i + 0]\r\n      prevImageData[i + 1] = imageData.data[i + 1]\r\n      prevImageData[i + 2] = imageData.data[i + 2]\r\n      prevImageData[i + 3] = imageData.data[i + 3]\r\n\r\n      imageData.data[i + 0] = toColor(data[i + 0] / renderCount[i + 0])\r\n      imageData.data[i + 1] = toColor(data[i + 1] / renderCount[i + 1])\r\n      imageData.data[i + 2] = toColor(data[i + 2] / renderCount[i + 2])\r\n      imageData.data[i + 3] = toColor(data[i + 3] / renderCount[i + 3])\r\n\r\n      currImageData[i + 0] = imageData.data[i + 0]\r\n      currImageData[i + 1] = imageData.data[i + 1]\r\n      currImageData[i + 2] = imageData.data[i + 2]\r\n      currImageData[i + 3] = imageData.data[i + 3]\r\n    }\r\n\r\n    let render = async function(step = 1) {\r\n      let start = Date.now()\r\n      let duration = 0\r\n\r\n      for (let y of spread(0, height - 1, step)) {\r\n        for (let x of range(0, width - 1, step)) {\r\n          if (over) return\r\n\r\n          renderByPosition(x, y)\r\n          duration = Date.now() - start\r\n          if (duration % 100 === 0) {\r\n            setTime(innerTime + duration)\r\n            await frame(() => {\r\n              renderToCanvas()\r\n              showDebugInfo()\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      if (step === 1) innerCount += 1\r\n      renderToCanvas()\r\n      showDebugInfo()\r\n      setTime((innerTime += duration))\r\n      if (innerCount > 2) {\r\n        scheduleRender()\r\n      } else {\r\n        tid = requestAnimationFrame(() => render())\r\n      }\r\n    }\r\n\r\n    let scheduleRender = async (count = 0) => {\r\n      let list = sortByMSE(prevImageData, currImageData)\r\n      let start = Date.now()\r\n      let duration = 0\r\n\r\n      for (let i = 0; i < 20000; i++) {\r\n        let item = list[i]\r\n        let x = item.index % width\r\n        let y = height - Math.floor(item.index / width)\r\n\r\n        renderByPosition(x, y)\r\n        duration = Date.now() - start\r\n\r\n        if (duration % 100 === 0) {\r\n          setTime(innerTime + duration)\r\n          await frame(() => {\r\n            renderToCanvas()\r\n            showDebugInfo()\r\n          })\r\n        }\r\n        if (over) return\r\n      }\r\n\r\n      if (over) return\r\n\r\n      renderToCanvas()\r\n      setTime((innerTime += Date.now() - start))\r\n      tid = requestAnimationFrame(() => {\r\n        if (count < 5) {\r\n          scheduleRender(count + 1)\r\n        } else {\r\n          render()\r\n        }\r\n      })\r\n    }\r\n\r\n    render(3)\r\n\r\n    return () => {\r\n      over = true\r\n      clearTimeout(tid)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        width={width}\r\n        height={height}\r\n        ref={ref}\r\n        style={{ background: '#000' }}\r\n      />\r\n      <br />\r\n      <canvas width={width} height={height} ref={deubgRef} />\r\n      <h3>光线追踪时间：{(time / 1000).toFixed(2)}秒</h3>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}