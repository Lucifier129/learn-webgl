{"version":3,"sources":["lib/webgl-utils.js","lib/webgl-debug.js","lib/cuon-utils.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/_@babel_runtime@7.3.1@@babel/runtime/helpers/esm/nonIterableSpread.js","demo/Demo03.js"],"names":["WebGLUtils","makeFailHTML","msg","GET_A_WEBGL_BROWSER","OTHER_PROBLEM","create3DContext","canvas","opt_attribs","names","context","ii","length","getContext","e","setupWebGL","opt_onError","container","document","getElementsByTagName","str","window","WebGLRenderingContext","innerHTML","addEventListener","event","statusMessage","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","cancelAnimationFrame","cancelRequestAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","mozCancelAnimationFrame","mozCancelRequestAnimationFrame","msCancelAnimationFrame","msCancelRequestAnimationFrame","oCancelAnimationFrame","oCancelRequestAnimationFrame","clearTimeout","WebGLDebugUtils","log","console","glValidEnumContexts","enable","0","disable","getParameter","drawArrays","drawElements","2","createShader","getShaderParameter","1","getProgramParameter","getVertexAttrib","vertexAttribPointer","bindTexture","activeTexture","getTexParameter","texParameterf","texParameteri","texImage2D","6","7","texSubImage2D","copyTexImage2D","copyTexSubImage2D","generateMipmap","bindBuffer","bufferData","bufferSubData","getBufferParameter","pixelStorei","readPixels","4","5","bindRenderbuffer","bindFramebuffer","checkFramebufferStatus","framebufferRenderbuffer","framebufferTexture2D","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","clear","depthFunc","blendFunc","blendFuncSeparate","3","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","glEnums","init","ctx","propertyName","checkInit","glEnumToString","value","name","undefined","toString","glFunctionArgToString","functionName","argumentIndex","funcInfo","resetToInitialState","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","disableVertexAttribArray","FLOAT","vertexAttrib1f","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_2D","useProgram","ELEMENT_ARRAY_BUFFER","FRAMEBUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearColor","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","width","height","ALWAYS","stencilMask","KEEP","viewport","clientWidth","clientHeight","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","getError","mightBeEnum","makeDebugContext","opt_onErrorFunc","err","args","argStr","glErrorShadow","makeErrorWrapper","result","apply","arguments","wrapper","NO_ERROR","makeLostContextSimulatingContext","wrapper_","contextId_","contextLost_","resourceDb_","onLost_","onRestored_","nextOnRestored_","glErrorShadow_","makeLostContextWrapper","f","arg","obj","WebGLBuffer","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLShader","WebGLTexture","__webglDebugContextLostId__","checkResources","INVALID_OPERATION","makeWebGLContextEvent","loseContext","k","Object","keys","clearErrors","CONTEXT_LOST_WEBGL","restoreContext","resource","deleteFramebuffer","deleteProgram","deleteRenderbuffer","deleteShader","deleteTexture","freeResources","creationFunctions","push","functionsThatShouldReturnNull","isFunctions","wrapEvent","listener","info","handleEvent","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","registerOnContextLostListener","registerOnContextRestoredListener","initShaders","gl","vshader","fshader","program","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","LINK_STATUS","error","getProgramInfoLog","type","source","shader","shaderSource","compileShader","COMPILE_STATUS","getShaderInfoLog","getWebGLContext","opt_debug","__webpack_require__","d","__webpack_exports__","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","call","from","_iterableToArray","TypeError","_nonIterableSpread","Demo02","ref","useRef","useEffect","current","Error","a_Position","a_PointSize","render","position","pointSize","vertexAttrib3f","concat","POINTS","count","setInterval","angle","Math","PI","x","sin","y","cos","_react_16_8_6_react_default","a","createElement"],"mappings":"0FA0DO,IAAMA,EAAc,WAOzB,IAAIC,EAAe,SAASC,GAC1B,MAEE,2FACAA,EACA,UAmBAC,EACF,+HAQEC,EACF,8HA4DEC,EAAkB,SAASC,EAAQC,GAGrC,IAFA,IAAIC,EAAQ,CAAC,QAAS,qBAAsB,YAAa,aACrDC,EAAU,KACLC,EAAK,EAAGA,EAAKF,EAAMG,SAAUD,EAAI,CACxC,IACED,EAAUH,EAAOM,WAAWJ,EAAME,GAAKH,GACvC,MAAOM,IACT,GAAIJ,EACF,MAGJ,OAAOA,GAGT,MAAO,CACLJ,gBAAiBA,EACjBS,WA5De,SAASR,EAAQC,EAAaQ,GAe7CA,EAAcA,GAdd,SAA6Bb,GAC3B,IAAIc,EAAYC,SAASC,qBAAqB,QAAQ,GAEtD,GAAIF,EAAW,CACb,IAAIG,EAAMC,OAAOC,sBACbjB,EACAD,EACAD,IACFiB,GAAO,qBAAuBjB,GAEhCc,EAAUM,UAAYrB,EAAakB,KAMnCb,EAAOiB,kBACTjB,EAAOiB,iBACL,4BACA,SAASC,GACPT,EAAYS,EAAMC,iBAEpB,GAGJ,IAAIhB,EAAUJ,EAAgBC,EAAQC,GAStC,OARKE,IACEW,OAAOC,sBAGVN,EAAY,KAITN,IA5FgB,GA6HtBW,OAAOM,wBACVN,OAAOM,sBAEHN,OAAOM,uBACPN,OAAOO,6BACPP,OAAOQ,0BACPR,OAAOS,wBACPT,OAAOU,yBACP,SACsCC,EACXC,GAEzBZ,OAAOa,WAAWF,EAAU,IAAO,MAWtCX,OAAOc,uBACVd,OAAOc,qBACLd,OAAOe,6BACPf,OAAOgB,4BACPhB,OAAOiB,mCACPjB,OAAOkB,yBACPlB,OAAOmB,gCACPnB,OAAOoB,wBACPpB,OAAOqB,+BACPrB,OAAOsB,uBACPtB,OAAOuB,8BACPvB,OAAOwB,cCnNJ,IAAMC,EAAkB,WAM/B,IAAIC,EAAM,SAAS5C,GACbkB,OAAO2B,SAAW3B,OAAO2B,QAAQD,KACnC1B,OAAO2B,QAAQD,IAAI5C,IAQnB8C,EAAsB,CAIxBC,OAAU,CAAEC,GAAE,GACdC,QAAW,CAAED,GAAE,GACfE,aAAgB,CAAEF,GAAE,GAIpBG,WAAc,CAAEH,GAAE,GAClBI,aAAgB,CAAEJ,GAAE,EAAMK,GAAE,GAI5BC,aAAgB,CAAEN,GAAE,GACpBO,mBAAsB,CAAEC,GAAE,GAC1BC,oBAAuB,CAAED,GAAE,GAI3BE,gBAAmB,CAAEF,GAAE,GACvBG,oBAAuB,CAAEN,GAAE,GAI3BO,YAAe,CAAEZ,GAAE,GACnBa,cAAiB,CAAEb,GAAE,GACrBc,gBAAmB,CAAEd,GAAE,EAAMQ,GAAE,GAC/BO,cAAiB,CAAEf,GAAE,EAAMQ,GAAE,GAC7BQ,cAAiB,CAAEhB,GAAE,EAAMQ,GAAE,EAAMH,GAAE,GACrCY,WAAc,CAAEjB,GAAE,EAAMK,GAAE,EAAMa,GAAE,EAAMC,GAAE,GAC1CC,cAAiB,CAAEpB,GAAE,EAAMkB,GAAE,EAAMC,GAAE,GACrCE,eAAkB,CAAErB,GAAE,EAAMK,GAAE,GAC9BiB,kBAAqB,CAAEtB,GAAE,GACzBuB,eAAkB,CAAEvB,GAAE,GAItBwB,WAAc,CAAExB,GAAE,GAClByB,WAAc,CAAEzB,GAAE,EAAMK,GAAE,GAC1BqB,cAAiB,CAAE1B,GAAE,GACrB2B,mBAAsB,CAAE3B,GAAE,EAAMQ,GAAE,GAIlCoB,YAAe,CAAE5B,GAAE,EAAMQ,GAAE,GAC3BqB,WAAc,CAAEC,GAAE,EAAMC,GAAE,GAC1BC,iBAAoB,CAAEhC,GAAE,GACxBiC,gBAAmB,CAAEjC,GAAE,GACvBkC,uBAA0B,CAAElC,GAAE,GAC9BmC,wBAA2B,CAAEnC,GAAE,EAAMQ,GAAE,EAAMH,GAAE,GAC/C+B,qBAAwB,CAAEpC,GAAE,EAAMQ,GAAE,EAAMH,GAAE,GAC5CgC,kCAAqC,CAAErC,GAAE,EAAMQ,GAAE,EAAMH,GAAE,GACzDiC,yBAA4B,CAAEtC,GAAE,EAAMQ,GAAE,GACxC+B,oBAAuB,CAAEvC,GAAE,EAAMQ,GAAE,GAInCgC,MAAS,CAAExC,GAAE,GACbyC,UAAa,CAAEzC,GAAE,GACjB0C,UAAa,CAAE1C,GAAE,EAAMQ,GAAE,GACzBmC,kBAAqB,CAAE3C,GAAE,EAAMQ,GAAE,EAAMH,GAAE,EAAMuC,GAAE,GACjDC,cAAiB,CAAE7C,GAAE,GACrB8C,sBAAyB,CAAE9C,GAAE,EAAMQ,GAAE,GACrCuC,YAAe,CAAE/C,GAAE,GACnBgD,oBAAuB,CAAEhD,GAAE,EAAMQ,GAAE,GACnCyC,oBAAuB,CAAEjD,GAAE,GAC3BkD,UAAa,CAAElD,GAAE,EAAMQ,GAAE,EAAMH,GAAE,GACjC8C,kBAAqB,CAAEnD,GAAE,EAAMQ,GAAE,EAAMH,GAAE,EAAMuC,GAAE,GAIjDQ,SAAY,CAAEpD,GAAE,GAChBqD,UAAa,CAAErD,GAAE,IAOfsD,EAAU,KAQd,SAASC,EAAKC,GACZ,GAAe,MAAXF,EAEF,IAAK,IAAIG,KADTH,EAAU,GACeE,EACS,iBAArBA,EAAIC,KACbH,EAAQE,EAAIC,IAAiBA,GASrC,SAASC,IACP,GAAe,MAAXJ,EACF,KAAM,uCAuBV,SAASK,EAAeC,GACtBF,IACA,IAAIG,EAAOP,EAAQM,GACnB,YAAiBE,IAATD,EAAsBA,EACzB,0BAA4BD,EAAMG,SAAS,IAAM,IAWxD,SAASC,EAAsBC,EAAcC,EAAeN,GAC1D,IAAIO,EAAWrE,EAAoBmE,GACnC,YAAiBH,IAAbK,GACEA,EAASD,GACJP,EAAeC,GAGnBA,EAAMG,WAsEf,SAASK,EAAoBZ,GAC3B,IAAIa,EAAab,EAAItD,aAAasD,EAAIc,oBAClCC,EAAMf,EAAIgB,eACdhB,EAAIhC,WAAWgC,EAAIiB,aAAcF,GACjC,IAAK,IAAI/G,EAAK,EAAGA,EAAK6G,IAAc7G,EAClCgG,EAAIkB,yBAAyBlH,GAC7BgG,EAAI7C,oBAAoBnD,EAAI,EAAGgG,EAAImB,OAAO,EAAO,EAAG,GACpDnB,EAAIoB,eAAepH,EAAI,GAEzBgG,EAAIqB,aAAaN,GAEjB,IAAIO,EAAkBtB,EAAItD,aAAasD,EAAIuB,yBAC3C,IAASvH,EAAK,EAAGA,EAAKsH,IAAmBtH,EACvCgG,EAAI3C,cAAc2C,EAAIwB,SAAWxH,GACjCgG,EAAI5C,YAAY4C,EAAIyB,iBAAkB,MACtCzB,EAAI5C,YAAY4C,EAAI0B,WAAY,MA8ClC,IA3CA1B,EAAI3C,cAAc2C,EAAIwB,UACtBxB,EAAI2B,WAAW,MACf3B,EAAIhC,WAAWgC,EAAIiB,aAAc,MACjCjB,EAAIhC,WAAWgC,EAAI4B,qBAAsB,MACzC5B,EAAIvB,gBAAgBuB,EAAI6B,YAAa,MACrC7B,EAAIxB,iBAAiBwB,EAAI8B,aAAc,MACvC9B,EAAIvD,QAAQuD,EAAI+B,OAChB/B,EAAIvD,QAAQuD,EAAIgC,WAChBhC,EAAIvD,QAAQuD,EAAIiC,YAChBjC,EAAIvD,QAAQuD,EAAIkC,QAChBlC,EAAIvD,QAAQuD,EAAImC,cAChBnC,EAAIoC,WAAW,EAAG,EAAG,EAAG,GACxBpC,EAAIX,cAAcW,EAAIqC,UACtBrC,EAAId,UAAUc,EAAIsC,IAAKtC,EAAIuC,MAC3BvC,EAAIwC,WAAW,EAAG,EAAG,EAAG,GACxBxC,EAAIyC,WAAW,GACfzC,EAAI0C,cAAc,GAClB1C,EAAI2C,WAAU,GAAM,GAAM,GAAM,GAChC3C,EAAIJ,SAASI,EAAI4C,MACjB5C,EAAIf,UAAUe,EAAI6C,MAClB7C,EAAI8C,WAAU,GACd9C,EAAI+C,WAAW,EAAG,GAClB/C,EAAIH,UAAUG,EAAIgD,KAClBhD,EAAIiD,KAAKjD,EAAIkD,qBAAsBlD,EAAImD,WACvCnD,EAAIoD,UAAU,GACdpD,EAAI5B,YAAY4B,EAAIqD,eAAgB,GACpCrD,EAAI5B,YAAY4B,EAAIsD,iBAAkB,GACtCtD,EAAI5B,YAAY4B,EAAIuD,qBAAqB,GACzCvD,EAAI5B,YAAY4B,EAAIwD,gCAAgC,GAEhDxD,EAAIyD,oCACNzD,EAAI5B,YAAY4B,EAAIyD,mCAAoCzD,EAAI0D,uBAE9D1D,EAAI2D,cAAc,EAAG,GACrB3D,EAAI4D,eAAe,GAAG,GACtB5D,EAAI6D,QAAQ,EAAG,EAAG7D,EAAIpG,OAAOkK,MAAO9D,EAAIpG,OAAOmK,QAC/C/D,EAAIT,YAAYS,EAAIgE,OAAQ,EAAG,YAC/BhE,EAAIiE,YAAY,YAChBjE,EAAIN,UAAUM,EAAIkE,KAAMlE,EAAIkE,KAAMlE,EAAIkE,MACtClE,EAAImE,SAAS,EAAG,EAAGnE,EAAIpG,OAAOwK,YAAapE,EAAIpG,OAAOyK,cACtDrE,EAAIhB,MAAMgB,EAAIsE,iBAAmBtE,EAAIuE,iBAAmBvE,EAAIwE,oBAGtDxE,EAAIyE,cAiRZ,MAAO,CAOL1E,KAAQA,EAOR2E,YAtcF,SAAqBtE,GAEnB,OADAF,SAC2BI,IAAnBR,EAAQM,IAgdhBD,eAAkBA,EAiBlBK,sBAAyBA,EAuBzBmE,iBAvcF,SAA0B3E,EAAK4E,GAC7B7E,EAAKC,GACL4E,EAAkBA,GAAmB,SAASC,EAAKpE,EAAcqE,GAG3D,IADA,IAAIC,EAAS,GACJ/K,EAAK,EAAGA,EAAK8K,EAAK7K,SAAUD,EACnC+K,IAAkB,GAAN/K,EAAW,GAAK,MACxBwG,EAAsBC,EAAczG,EAAI8K,EAAK9K,IAEnDoC,EAAI,eAAgB+D,EAAe0E,GAAO,OAAQpE,EAC9C,IAAMsE,EAAS,MAKzB,IAAIC,EAAgB,GAGpB,SAASC,EAAiBjF,EAAKS,GAC7B,OAAO,WACL,IAAIyE,EAASlF,EAAIS,GAAc0E,MAAMnF,EAAKoF,WACtCP,EAAM7E,EAAIyE,WAKd,OAJW,GAAPI,IACFG,EAAcH,IAAO,EACrBD,EAAgBC,EAAKpE,EAAc2E,YAE9BF,GAMX,IAAIG,EAAU,GACd,IAAK,IAAIpF,KAAgBD,EACS,mBAArBA,EAAIC,GACZoF,EAAQpF,GAAgBgF,EAAiBjF,EAAKC,GAE9CoF,EAAQpF,GAAgBD,EAAIC,GAejC,OAVAoF,EAAQZ,SAAW,WACjB,IAAK,IAAII,KAAOG,EACd,GAAIA,EAAcH,GAEhB,OADAG,EAAcH,IAAO,EACdA,EAGX,OAAO7E,EAAIsF,UAGND,GA0aPE,iCAvWF,SAA0CvF,GACxC,IAAIwF,EAAW,GACXC,EAAa,EACbC,GAAe,EAEfC,EAAc,GACdC,OAAUtF,EACVuF,OAAcvF,EACdwF,OAAkBxF,EAGlByF,EAAiB,GA8BrB,SAASC,EAAuBhG,EAAKS,GACnC,IAAIwF,EAAIjG,EAAIS,GACZ,OAAO,WAEL,IAAKiF,EACH,OAvBN,SAAwBZ,GACtB,IAAK,IAAI9K,EAAK,EAAGA,EAAK8K,EAAK7K,SAAUD,EAAI,CACvC,IAAIkM,EAAMpB,EAAK9K,GACf,IAbmBmM,EAaDD,aAXGE,aACfD,aAAeE,kBACfF,aAAeG,cACfH,aAAeI,mBACfJ,aAAeK,aACfL,aAAeM,aAOnB,OAAOP,EAAIQ,6BAA+BjB,EAdhD,IAAuBU,EAiBrB,OAAO,EAgBEQ,CAAevB,WAIPa,EAAEd,MAAMnF,EAAKoF,gBAHxBW,EAAe/F,EAAI4G,oBAAqB,IAShD,IAAK,IAAI3G,KAAgBD,EACS,mBAArBA,EAAIC,GACZuF,EAASvF,GAAgB+F,EAAuBhG,EAAKC,GAErDuF,EAASvF,GAAgBD,EAAIC,GAIlC,SAAS4G,EAAsB9L,GAC7B,MAAO,CAACA,cAAeA,GAsBzByK,EAASsB,YAAc,WACrB,IAAKpB,EAAc,CAGjB,IAFAA,GAAe,IACbD,EACKzF,EAAIyE,cA1Df,WAEE,IADA,IAAIsC,EAAIC,OAAOC,KAAKlB,GACX/L,EAAK,EAAGA,EAAK+M,EAAE9M,SAAUD,IAyDhCkN,GACAnB,EAAe/F,EAAImH,qBAAsB,EACzC5L,WAAW,WACHqK,GACFA,EAAQiB,EAAsB,kBAE/B,KAITrB,EAAS4B,eAAiB,WACxB,GAAI1B,EAAc,CAChB,IAAIG,EAaF,KAAM,qDAZNtK,WAAW,WAIP,GAzCV,WACE,IAAK,IAAIvB,EAAK,EAAGA,EAAK2L,EAAY1L,SAAUD,EAAI,CAC9C,IAAIqN,EAAW1B,EAAY3L,GACvBqN,aAAoBjB,YACtBpG,EAAIqB,aAAagG,GACRA,aAAoBhB,iBAC7BrG,EAAIsH,kBAAkBD,GACbA,aAAoBf,aAC7BtG,EAAIuH,cAAcF,GACTA,aAAoBd,kBAC7BvG,EAAIwH,mBAAmBH,GACdA,aAAoBb,YAC7BxG,EAAIyH,aAAaJ,GACRA,aAAoBZ,cAC7BzG,EAAI0H,cAAcL,IAwBdM,GACA/G,EAAoBZ,GACpB0F,GAAe,EACXG,EAAa,CACf,IAAIxK,EAAWwK,EACfA,EAAcC,EACdA,OAAkBxF,EAClBjF,EAASwL,EAAsB,uBAEhC,KAQXrB,EAASf,SAAW,WAClB,IAAKiB,EAEH,KAAOb,EAAM7E,EAAIyE,YACfsB,EAAelB,IAAO,EAG1B,IAAK,IAAIA,KAAOkB,EACd,GAAIA,EAAelB,GAEjB,cADOkB,EAAelB,GACfA,EAGX,OAAO7E,EAAIsF,UAWb,IARA,IAAIsC,EAAoB,CACtB,eACA,oBACA,gBACA,qBACA,eACA,iBAEO5N,EAAK,EAAGA,EAAK4N,EAAkB3N,SAAUD,EAEhDwL,EADI/E,EAAemH,EAAkB5N,IACZ,SAASiM,GAChC,OAAO,WACL,GAAIP,EACF,OAAO,KAET,IAAIS,EAAMF,EAAEd,MAAMnF,EAAKoF,WAGvB,OAFAe,EAAIO,4BAA8BjB,EAClCE,EAAYkC,KAAK1B,GACVA,GARc,CAUvBnG,EAAIS,IAGR,IAAIqH,EAAgC,CAClC,kBACA,mBACA,qBACA,uBACA,qBACA,oCACA,eACA,sBACA,oBACA,2BACA,qBACA,mBACA,kBACA,kBACA,aACA,qBACA,mBAEF,IAAS9N,EAAK,EAAGA,EAAK8N,EAA8B7N,SAAUD,EAE5DwL,EADI/E,EAAeqH,EAA8B9N,IACxB,SAASiM,GAChC,OAAO,WACL,OAAIP,EACK,KAEFO,EAAEd,MAAMnF,EAAKoF,YALC,CAOvBI,EAAS/E,IAGb,IAqB2CwF,EArBvC8B,EAAc,CAChB,WACA,YACA,gBACA,YACA,iBACA,WACA,aAEF,IAAS/N,EAAK,EAAGA,EAAK+N,EAAY9N,SAAUD,EAAI,CAC9C,IAAIyG,EACJ+E,EADI/E,EAAesH,EAAY/N,IACN,SAASiM,GAChC,OAAO,WACL,OAAIP,GAGGO,EAAEd,MAAMnF,EAAKoF,YALC,CAOvBI,EAAS/E,IAkCb,SAASuH,EAAUC,GACjB,MAAwB,mBAAbA,EACFA,EAEA,SAASC,GACdD,EAASE,YAAYD,IAiB3B,OArDA1C,EAAS9G,wBAAkCuH,EAOzCT,EAAS9G,uBANF,WACL,OAAIgH,EACK1F,EAAIoI,wBAENnC,EAAEd,MAAMnF,EAAKoF,aAIxBI,EAAS6C,kBAAoB,SAASpC,GACpC,OAAO,WACL,OAAIP,GACM,EAEHO,EAAEd,MAAMnF,EAAKoF,YALK,CAO3BI,EAAS6C,mBAEX7C,EAAS8C,sBAAwB,SAASrC,GACxC,OAAO,WACL,OAAIP,EACK,EAEFO,EAAEd,MAAMnF,EAAKoF,YALS,CAO/BI,EAAS8C,uBAEX9C,EAAS+C,cAAgB,WACvB,OAAO7C,GAaTF,EAASgD,8BAAgC,SAASP,GAChDrC,EAAUoC,EAAUC,IAGtBzC,EAASiD,kCAAoC,SAASR,GAChDvC,EACFI,EAAkBkC,EAAUC,GAE5BpC,EAAcmC,EAAUC,IAIrBzC,GAmGP5E,oBAAuBA,GA1pBM,GCKxB,SAAS8H,EAAYC,EAAIC,EAASC,GACvC,IAAIC,EAmBC,SAAuBH,EAAIC,EAASC,GAEzC,IAAIE,EAAeC,EAAWL,EAAIA,EAAGM,cAAeL,GAChDM,EAAiBF,EAAWL,EAAIA,EAAGQ,gBAAiBN,GACxD,IAAKE,IAAiBG,EACpB,OAAO,KAIT,IAAIJ,EAAUH,EAAGS,gBACjB,IAAKN,EACH,OAAO,KAYT,GARAH,EAAGU,aAAaP,EAASC,GACzBJ,EAAGU,aAAaP,EAASI,GAGzBP,EAAGW,YAAYR,IAGFH,EAAG1L,oBAAoB6L,EAASH,EAAGY,aACnC,CACX,IAAIC,EAAQb,EAAGc,kBAAkBX,GAKjC,OAJAzM,QAAQD,IAAI,2BAA6BoN,GACzCb,EAAGpB,cAAcuB,GACjBH,EAAGlB,aAAayB,GAChBP,EAAGlB,aAAasB,GACT,KAET,OAAOD,EAlDOM,CAAcT,EAAIC,EAASC,GACzC,OAAKC,GAKLH,EAAGhH,WAAWmH,GACdH,EAAGG,QAAUA,GAEN,IAPLzM,QAAQD,IAAI,6BACL,GAyDJ,SAAS4M,EAAWL,EAAIe,EAAMC,GAEnC,IAAIC,EAASjB,EAAG7L,aAAa4M,GAC7B,GAAc,MAAVE,EAEF,OADAvN,QAAQD,IAAI,2BACL,KAWT,GAPAuM,EAAGkB,aAAaD,EAAQD,GAGxBhB,EAAGmB,cAAcF,IAGFjB,EAAG5L,mBAAmB6M,EAAQjB,EAAGoB,gBACjC,CACb,IAAIP,EAAQb,EAAGqB,iBAAiBJ,GAGhC,OAFAvN,QAAQD,IAAI,6BAA+BoN,GAC3Cb,EAAGlB,aAAamC,GACT,KAGT,OAAOA,EASF,SAASK,EAAgBrQ,EAAQsQ,GAEtC,IAAIvB,EAAKrP,EAAWc,WAAWR,GAC/B,OAAK+O,IAGDvD,UAAUnL,OAAS,GAAKiQ,KAC1BvB,EAAKxM,EAAgBwI,iBAAiBgE,IAGjCA,GAPS,KA3GlBwB,EAAAC,EAAAC,EAAA,sBAAA3B,IAAAyB,EAAAC,EAAAC,EAAA,sBAAAJ,qCCGe,SAAAK,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAtQ,QAAiDyQ,EAAAH,EAAAtQ,OAAgByQ,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSC,CAAiBL,IEJX,SAAAM,GACf,GAAAC,OAAAC,YAAA/D,OAAA6D,IAAA,uBAAA7D,OAAAgE,UAAAzK,SAAA0K,KAAAJ,GAAA,OAAAL,MAAAU,KAAAL,GFGmCM,CAAeZ,IGJnC,WACf,UAAAa,UAAA,mDHG2DC,sCID5C,SAASC,IACtB,IAAIC,EAAMC,mBAwDV,OAtDAC,oBAAU,WACR,IAAI7R,EAAS2R,EAAIG,QACb/C,EAAKsB,YAAgBrQ,GAmBzB,IAFgB8O,YAAYC,EAfV,qLASA,0FAShB,MAAM,IAAIgD,MAAM,+BAGlB,IAAIC,EAAajD,EAAGN,kBAAkBM,EAAGG,QAAS,cAC9C+C,EAAclD,EAAGN,kBAAkBM,EAAGG,QAAS,eAEnD,GAAI8C,EAAa,GAAKC,EAAc,EAClC,MAAM,IAAIF,MAAM,+CAGlB,IAAIG,EAAS,SAACC,GAA6B,IAAnBC,EAAmB5G,UAAAnL,OAAA,QAAAqG,IAAA8E,UAAA,GAAAA,UAAA,GAAP,GAClCuD,EAAGnG,WAAW,EAAG,EAAG,EAAG,GACvBmG,EAAG3J,MAAM2J,EAAGrE,kBAEZqE,EAAGsD,eAAH9G,MAAAwD,EAAE,CAAgBiD,GAAhBM,OAAA5B,EAA+ByB,KACjCpD,EAAGvH,eAAeyK,EAAaG,GAC/BrD,EAAGhM,WAAWgM,EAAGwD,OAAQ,EAAG,IAG9BL,EAAO,CAAC,EAAG,EAAG,IAEd,IAAIM,EAAQ,EACZC,YAAY,WACV,IAAIC,EAASF,EAAQ,IAAOG,KAAKC,GAAK,GAClCC,EAAIF,KAAKG,IAAIJ,GAAS,EACtBK,EAAIJ,KAAKK,IAAIN,GAAS,EAE1BF,GAASA,EAAQ,GAAK,IACtBN,EAAO,CAACW,EAAGE,EAAG,KACb,IAAO,KACT,IAEIE,EAAAC,EAAAC,cAAA,UAAQjJ,MAAO,IAAKC,OAAQ,IAAKwH,IAAKA","file":"static/js/16.858c73b1.chunk.js","sourcesContent":["/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimationFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\nexport const WebGLUtils = (function() {\r\n  /**\r\n   * Creates the HTLM for a failure message\r\n   * @param {string} canvasContainerId id of container of th\r\n   *        canvas.\r\n   * @return {string} The html.\r\n   */\r\n  var makeFailHTML = function(msg) {\r\n    return (\r\n      '' +\r\n      '<div style=\"margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;\">' +\r\n      msg +\r\n      '</div>'\r\n    )\r\n    return (\r\n      '' +\r\n      '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n      '<td align=\"center\">' +\r\n      '<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n      '<div style=\"\">' +\r\n      msg +\r\n      '</div>' +\r\n      '</div>' +\r\n      '</td></tr></table>'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Mesasge for getting a webgl browser\r\n   * @type {string}\r\n   */\r\n  var GET_A_WEBGL_BROWSER =\r\n    '' +\r\n    'This page requires a browser that supports WebGL.<br/>' +\r\n    '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>'\r\n\r\n  /**\r\n   * Mesasge for need better hardware\r\n   * @type {string}\r\n   */\r\n  var OTHER_PROBLEM =\r\n    '' +\r\n    \"It doesn't appear your computer can support WebGL.<br/>\" +\r\n    '<a href=\"http://get.webgl.org\">Click here for more information.</a>'\r\n\r\n  /**\r\n   * Creates a webgl context. If creation fails it will\r\n   * change the contents of the container of the <canvas>\r\n   * tag to an error message with the correct links for WebGL.\r\n   * @param {Element} canvas. The canvas element to create a\r\n   *     context from.\r\n   * @param {WebGLContextCreationAttirbutes} opt_attribs Any\r\n   *     creation attributes you want to pass in.\r\n   * @param {function:(msg)} opt_onError An function to call\r\n   *     if there is an error during creation.\r\n   * @return {WebGLRenderingContext} The created context.\r\n   */\r\n  var setupWebGL = function(canvas, opt_attribs, opt_onError) {\r\n    function handleCreationError(msg) {\r\n      var container = document.getElementsByTagName('body')[0]\r\n      //var container = canvas.parentNode;\r\n      if (container) {\r\n        var str = window.WebGLRenderingContext\r\n          ? OTHER_PROBLEM\r\n          : GET_A_WEBGL_BROWSER\r\n        if (msg) {\r\n          str += '<br/><br/>Status: ' + msg\r\n        }\r\n        container.innerHTML = makeFailHTML(str)\r\n      }\r\n    }\r\n\r\n    opt_onError = opt_onError || handleCreationError\r\n\r\n    if (canvas.addEventListener) {\r\n      canvas.addEventListener(\r\n        'webglcontextcreationerror',\r\n        function(event) {\r\n          opt_onError(event.statusMessage)\r\n        },\r\n        false\r\n      )\r\n    }\r\n    var context = create3DContext(canvas, opt_attribs)\r\n    if (!context) {\r\n      if (!window.WebGLRenderingContext) {\r\n        opt_onError('')\r\n      } else {\r\n        opt_onError('')\r\n      }\r\n    }\r\n\r\n    return context\r\n  }\r\n\r\n  /**\r\n   * Creates a webgl context.\r\n   * @param {!Canvas} canvas The canvas tag to get context\r\n   *     from. If one is not passed in one will be created.\r\n   * @return {!WebGLContext} The created context.\r\n   */\r\n  var create3DContext = function(canvas, opt_attribs) {\r\n    var names = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl']\r\n    var context = null\r\n    for (var ii = 0; ii < names.length; ++ii) {\r\n      try {\r\n        context = canvas.getContext(names[ii], opt_attribs)\r\n      } catch (e) {}\r\n      if (context) {\r\n        break\r\n      }\r\n    }\r\n    return context\r\n  }\r\n\r\n  return {\r\n    create3DContext: create3DContext,\r\n    setupWebGL: setupWebGL\r\n  }\r\n})()\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser\r\n * way.\r\n */\r\nif (!window.requestAnimationFrame) {\r\n  window.requestAnimationFrame = (function() {\r\n    return (\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame ||\r\n      window.oRequestAnimationFrame ||\r\n      window.msRequestAnimationFrame ||\r\n      function(\r\n        /* function FrameRequestCallback */ callback,\r\n        /* DOMElement Element */ element\r\n      ) {\r\n        window.setTimeout(callback, 1000 / 60)\r\n      }\r\n    )\r\n  })()\r\n}\r\n\r\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame' to reflect an update to the W3C Animation-Timing Spec.\r\n *\r\n * Cancels an animation frame request.\r\n * Checks for cross-browser support, falls back to clearTimeout.\r\n * @param {number}  Animation frame request. */\r\nif (!window.cancelAnimationFrame) {\r\n  window.cancelAnimationFrame =\r\n    window.cancelRequestAnimationFrame ||\r\n    window.webkitCancelAnimationFrame ||\r\n    window.webkitCancelRequestAnimationFrame ||\r\n    window.mozCancelAnimationFrame ||\r\n    window.mozCancelRequestAnimationFrame ||\r\n    window.msCancelAnimationFrame ||\r\n    window.msCancelRequestAnimationFrame ||\r\n    window.oCancelAnimationFrame ||\r\n    window.oCancelRequestAnimationFrame ||\r\n    window.clearTimeout\r\n}\r\n","//Copyright (c) 2009 The Chromium Authors. All rights reserved.\r\n//Use of this source code is governed by a BSD-style license that can be\r\n//found in the LICENSE file.\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\nexport const WebGLDebugUtils = function() {\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param {string} msg Message to log.\r\n */\r\nvar log = function(msg) {\r\n  if (window.console && window.console.log) {\r\n    window.console.log(msg);\r\n  }\r\n};\r\n\r\n/**\r\n * Which arguements are enums.\r\n * @type {!Object.<number, string>}\r\n */\r\nvar glValidEnumContexts = {\r\n\r\n  // Generic setters and getters\r\n\r\n  'enable': { 0:true },\r\n  'disable': { 0:true },\r\n  'getParameter': { 0:true },\r\n\r\n  // Rendering\r\n\r\n  'drawArrays': { 0:true },\r\n  'drawElements': { 0:true, 2:true },\r\n\r\n  // Shaders\r\n\r\n  'createShader': { 0:true },\r\n  'getShaderParameter': { 1:true },\r\n  'getProgramParameter': { 1:true },\r\n\r\n  // Vertex attributes\r\n\r\n  'getVertexAttrib': { 1:true },\r\n  'vertexAttribPointer': { 2:true },\r\n\r\n  // Textures\r\n\r\n  'bindTexture': { 0:true },\r\n  'activeTexture': { 0:true },\r\n  'getTexParameter': { 0:true, 1:true },\r\n  'texParameterf': { 0:true, 1:true },\r\n  'texParameteri': { 0:true, 1:true, 2:true },\r\n  'texImage2D': { 0:true, 2:true, 6:true, 7:true },\r\n  'texSubImage2D': { 0:true, 6:true, 7:true },\r\n  'copyTexImage2D': { 0:true, 2:true },\r\n  'copyTexSubImage2D': { 0:true },\r\n  'generateMipmap': { 0:true },\r\n\r\n  // Buffer objects\r\n\r\n  'bindBuffer': { 0:true },\r\n  'bufferData': { 0:true, 2:true },\r\n  'bufferSubData': { 0:true },\r\n  'getBufferParameter': { 0:true, 1:true },\r\n\r\n  // Renderbuffers and framebuffers\r\n\r\n  'pixelStorei': { 0:true, 1:true },\r\n  'readPixels': { 4:true, 5:true },\r\n  'bindRenderbuffer': { 0:true },\r\n  'bindFramebuffer': { 0:true },\r\n  'checkFramebufferStatus': { 0:true },\r\n  'framebufferRenderbuffer': { 0:true, 1:true, 2:true },\r\n  'framebufferTexture2D': { 0:true, 1:true, 2:true },\r\n  'getFramebufferAttachmentParameter': { 0:true, 1:true, 2:true },\r\n  'getRenderbufferParameter': { 0:true, 1:true },\r\n  'renderbufferStorage': { 0:true, 1:true },\r\n\r\n  // Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n  'clear': { 0:true },\r\n  'depthFunc': { 0:true },\r\n  'blendFunc': { 0:true, 1:true },\r\n  'blendFuncSeparate': { 0:true, 1:true, 2:true, 3:true },\r\n  'blendEquation': { 0:true },\r\n  'blendEquationSeparate': { 0:true, 1:true },\r\n  'stencilFunc': { 0:true },\r\n  'stencilFuncSeparate': { 0:true, 1:true },\r\n  'stencilMaskSeparate': { 0:true },\r\n  'stencilOp': { 0:true, 1:true, 2:true },\r\n  'stencilOpSeparate': { 0:true, 1:true, 2:true, 3:true },\r\n\r\n  // Culling\r\n\r\n  'cullFace': { 0:true },\r\n  'frontFace': { 0:true },\r\n};\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nvar glEnums = null;\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nfunction init(ctx) {\r\n  if (glEnums == null) {\r\n    glEnums = { };\r\n    for (var propertyName in ctx) {\r\n      if (typeof ctx[propertyName] == 'number') {\r\n        glEnums[ctx[propertyName]] = propertyName;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Checks the utils have been initialized.\r\n */\r\nfunction checkInit() {\r\n  if (glEnums == null) {\r\n    throw 'WebGLDebugUtils.init(ctx) not called';\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param {*} value Value to check if it might be an enum.\r\n * @return {boolean} True if value matches one of the WebGL defined enums\r\n */\r\nfunction mightBeEnum(value) {\r\n  checkInit();\r\n  return (glEnums[value] !== undefined);\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\r\n *\r\n * @param {number} value Value to return an enum for\r\n * @return {string} The string version of the enum.\r\n */\r\nfunction glEnumToString(value) {\r\n  checkInit();\r\n  var name = glEnums[value];\r\n  return (name !== undefined) ? name :\r\n      (\"*UNKNOWN WebGL ENUM (0x\" + value.toString(16) + \")\");\r\n}\r\n\r\n/**\r\n * Returns the string version of a WebGL argument.\r\n * Attempts to convert enum arguments to strings.\r\n * @param {string} functionName the name of the WebGL function.\r\n * @param {number} argumentIndx the index of the argument.\r\n * @param {*} value The value of the argument.\r\n * @return {string} The value as a string.\r\n */\r\nfunction glFunctionArgToString(functionName, argumentIndex, value) {\r\n  var funcInfo = glValidEnumContexts[functionName];\r\n  if (funcInfo !== undefined) {\r\n    if (funcInfo[argumentIndex]) {\r\n      return glEnumToString(value);\r\n    }\r\n  }\r\n  return value.toString();\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not gl.NO_ERROR.\r\n *\r\n * @param {!WebGLRenderingContext} ctx The webgl context to\r\n *        wrap.\r\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\r\n *        The function to call when gl.getError returns an\r\n *        error. If not specified the default function calls\r\n *        console.log with a message.\r\n */\r\nfunction makeDebugContext(ctx, opt_onErrorFunc) {\r\n  init(ctx);\r\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\r\n        // apparently we can't do args.join(\",\");\r\n        var argStr = \"\";\r\n        for (var ii = 0; ii < args.length; ++ii) {\r\n          argStr += ((ii == 0) ? '' : ', ') +\r\n              glFunctionArgToString(functionName, ii, args[ii]);\r\n        }\r\n        log(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\r\n            \"(\" + argStr + \")\");\r\n      };\r\n\r\n  // Holds booleans for each GL error so after we get the error ourselves\r\n  // we can still return it to the client app.\r\n  var glErrorShadow = { };\r\n\r\n  // Makes a function that calls a WebGL function and then calls getError.\r\n  function makeErrorWrapper(ctx, functionName) {\r\n    return function() {\r\n      var result = ctx[functionName].apply(ctx, arguments);\r\n      var err = ctx.getError();\r\n      if (err != 0) {\r\n        glErrorShadow[err] = true;\r\n        opt_onErrorFunc(err, functionName, arguments);\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  // Make a an object that has a copy of every property of the WebGL context\r\n  // but wraps all functions.\r\n  var wrapper = {};\r\n  for (var propertyName in ctx) {\r\n    if (typeof ctx[propertyName] == 'function') {\r\n       wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\r\n     } else {\r\n       wrapper[propertyName] = ctx[propertyName];\r\n     }\r\n  }\r\n\r\n  // Override the getError function with one that returns our saved results.\r\n  wrapper.getError = function() {\r\n    for (var err in glErrorShadow) {\r\n      if (glErrorShadow[err]) {\r\n        glErrorShadow[err] = false;\r\n        return err;\r\n      }\r\n    }\r\n    return ctx.NO_ERROR;\r\n  };\r\n\r\n  return wrapper;\r\n}\r\n\r\nfunction resetToInitialState(ctx) {\r\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\r\n  var tmp = ctx.createBuffer();\r\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\r\n  for (var ii = 0; ii < numAttribs; ++ii) {\r\n    ctx.disableVertexAttribArray(ii);\r\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\r\n    ctx.vertexAttrib1f(ii, 0);\r\n  }\r\n  ctx.deleteBuffer(tmp);\r\n\r\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\r\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\r\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\r\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\r\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\r\n  }\r\n\r\n  ctx.activeTexture(ctx.TEXTURE0);\r\n  ctx.useProgram(null);\r\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\r\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\r\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\r\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\r\n  ctx.disable(ctx.BLEND);\r\n  ctx.disable(ctx.CULL_FACE);\r\n  ctx.disable(ctx.DEPTH_TEST);\r\n  ctx.disable(ctx.DITHER);\r\n  ctx.disable(ctx.SCISSOR_TEST);\r\n  ctx.blendColor(0, 0, 0, 0);\r\n  ctx.blendEquation(ctx.FUNC_ADD);\r\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\r\n  ctx.clearColor(0, 0, 0, 0);\r\n  ctx.clearDepth(1);\r\n  ctx.clearStencil(-1);\r\n  ctx.colorMask(true, true, true, true);\r\n  ctx.cullFace(ctx.BACK);\r\n  ctx.depthFunc(ctx.LESS);\r\n  ctx.depthMask(true);\r\n  ctx.depthRange(0, 1);\r\n  ctx.frontFace(ctx.CCW);\r\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\r\n  ctx.lineWidth(1);\r\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\r\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\r\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\r\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n  // TODO: Delete this IF.\r\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\r\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\r\n  }\r\n  ctx.polygonOffset(0, 0);\r\n  ctx.sampleCoverage(1, false);\r\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\r\n  ctx.stencilMask(0xFFFFFFFF);\r\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\r\n  ctx.viewport(0, 0, ctx.canvas.clientWidth, ctx.canvas.clientHeight);\r\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\r\n\r\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\r\n  while(ctx.getError());\r\n}\r\n\r\nfunction makeLostContextSimulatingContext(ctx) {\r\n  var wrapper_ = {};\r\n  var contextId_ = 1;\r\n  var contextLost_ = false;\r\n  var resourceId_ = 0;\r\n  var resourceDb_ = [];\r\n  var onLost_ = undefined;\r\n  var onRestored_ = undefined;\r\n  var nextOnRestored_ = undefined;\r\n\r\n  // Holds booleans for each GL error so can simulate errors.\r\n  var glErrorShadow_ = { };\r\n\r\n  function isWebGLObject(obj) {\r\n    //return false;\r\n    return (obj instanceof WebGLBuffer ||\r\n            obj instanceof WebGLFramebuffer ||\r\n            obj instanceof WebGLProgram ||\r\n            obj instanceof WebGLRenderbuffer ||\r\n            obj instanceof WebGLShader ||\r\n            obj instanceof WebGLTexture);\r\n  }\r\n\r\n  function checkResources(args) {\r\n    for (var ii = 0; ii < args.length; ++ii) {\r\n      var arg = args[ii];\r\n      if (isWebGLObject(arg)) {\r\n        return arg.__webglDebugContextLostId__ == contextId_;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clearErrors() {\r\n    var k = Object.keys(glErrorShadow_);\r\n    for (var ii = 0; ii < k.length; ++ii) {\r\n      // delete glErrorShdow_[k];\r\n    }\r\n  }\r\n\r\n  // Makes a function that simulates WebGL when out of context.\r\n  function makeLostContextWrapper(ctx, functionName) {\r\n    var f = ctx[functionName];\r\n    return function() {\r\n      // Only call the functions if the context is not lost.\r\n      if (!contextLost_) {\r\n        if (!checkResources(arguments)) {\r\n          glErrorShadow_[ctx.INVALID_OPERATION] = true;\r\n          return;\r\n        }\r\n        var result = f.apply(ctx, arguments);\r\n        return result;\r\n      }\r\n    };\r\n  }\r\n\r\n  for (var propertyName in ctx) {\r\n    if (typeof ctx[propertyName] == 'function') {\r\n       wrapper_[propertyName] = makeLostContextWrapper(ctx, propertyName);\r\n     } else {\r\n       wrapper_[propertyName] = ctx[propertyName];\r\n     }\r\n  }\r\n\r\n  function makeWebGLContextEvent(statusMessage) {\r\n    return {statusMessage: statusMessage};\r\n  }\r\n\r\n  function freeResources() {\r\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\r\n      var resource = resourceDb_[ii];\r\n      if (resource instanceof WebGLBuffer) {\r\n        ctx.deleteBuffer(resource);\r\n      } else if (resource instanceof WebGLFramebuffer) {\r\n        ctx.deleteFramebuffer(resource);\r\n      } else if (resource instanceof WebGLProgram) {\r\n        ctx.deleteProgram(resource);\r\n      } else if (resource instanceof WebGLRenderbuffer) {\r\n        ctx.deleteRenderbuffer(resource);\r\n      } else if (resource instanceof WebGLShader) {\r\n        ctx.deleteShader(resource);\r\n      } else if (resource instanceof WebGLTexture) {\r\n        ctx.deleteTexture(resource);\r\n      }\r\n    }\r\n  }\r\n\r\n  wrapper_.loseContext = function() {\r\n    if (!contextLost_) {\r\n      contextLost_ = true;\r\n      ++contextId_;\r\n      while (ctx.getError());\r\n      clearErrors();\r\n      glErrorShadow_[ctx.CONTEXT_LOST_WEBGL] = true;\r\n      setTimeout(function() {\r\n          if (onLost_) {\r\n            onLost_(makeWebGLContextEvent(\"context lost\"));\r\n          }\r\n        }, 0);\r\n    }\r\n  };\r\n\r\n  wrapper_.restoreContext = function() {\r\n    if (contextLost_) {\r\n      if (onRestored_) {\r\n        setTimeout(function() {\r\n            freeResources();\r\n            resetToInitialState(ctx);\r\n            contextLost_ = false;\r\n            if (onRestored_) {\r\n              var callback = onRestored_;\r\n              onRestored_ = nextOnRestored_;\r\n              nextOnRestored_ = undefined;\r\n              callback(makeWebGLContextEvent(\"context restored\"));\r\n            }\r\n          }, 0);\r\n      } else {\r\n        throw \"You can not restore the context without a listener\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Wrap a few functions specially.\r\n  wrapper_.getError = function() {\r\n    if (!contextLost_) {\r\n      var err;\r\n      while (err = ctx.getError()) {\r\n        glErrorShadow_[err] = true;\r\n      }\r\n    }\r\n    for (var err in glErrorShadow_) {\r\n      if (glErrorShadow_[err]) {\r\n        delete glErrorShadow_[err];\r\n        return err;\r\n      }\r\n    }\r\n    return ctx.NO_ERROR;\r\n  };\r\n\r\n  var creationFunctions = [\r\n    \"createBuffer\",\r\n    \"createFramebuffer\",\r\n    \"createProgram\",\r\n    \"createRenderbuffer\",\r\n    \"createShader\",\r\n    \"createTexture\"\r\n  ];\r\n  for (var ii = 0; ii < creationFunctions.length; ++ii) {\r\n    var functionName = creationFunctions[ii];\r\n    wrapper_[functionName] = function(f) {\r\n      return function() {\r\n        if (contextLost_) {\r\n          return null;\r\n        }\r\n        var obj = f.apply(ctx, arguments);\r\n        obj.__webglDebugContextLostId__ = contextId_;\r\n        resourceDb_.push(obj);\r\n        return obj;\r\n      };\r\n    }(ctx[functionName]);\r\n  }\r\n\r\n  var functionsThatShouldReturnNull = [\r\n    \"getActiveAttrib\",\r\n    \"getActiveUniform\",\r\n    \"getBufferParameter\",\r\n    \"getContextAttributes\",\r\n    \"getAttachedShaders\",\r\n    \"getFramebufferAttachmentParameter\",\r\n    \"getParameter\",\r\n    \"getProgramParameter\",\r\n    \"getProgramInfoLog\",\r\n    \"getRenderbufferParameter\",\r\n    \"getShaderParameter\",\r\n    \"getShaderInfoLog\",\r\n    \"getShaderSource\",\r\n    \"getTexParameter\",\r\n    \"getUniform\",\r\n    \"getUniformLocation\",\r\n    \"getVertexAttrib\"\r\n  ];\r\n  for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n    var functionName = functionsThatShouldReturnNull[ii];\r\n    wrapper_[functionName] = function(f) {\r\n      return function() {\r\n        if (contextLost_) {\r\n          return null;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      }\r\n    }(wrapper_[functionName]);\r\n  }\r\n\r\n  var isFunctions = [\r\n    \"isBuffer\",\r\n    \"isEnabled\",\r\n    \"isFramebuffer\",\r\n    \"isProgram\",\r\n    \"isRenderbuffer\",\r\n    \"isShader\",\r\n    \"isTexture\"\r\n  ];\r\n  for (var ii = 0; ii < isFunctions.length; ++ii) {\r\n    var functionName = isFunctions[ii];\r\n    wrapper_[functionName] = function(f) {\r\n      return function() {\r\n        if (contextLost_) {\r\n          return false;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      }\r\n    }(wrapper_[functionName]);\r\n  }\r\n\r\n  wrapper_.checkFramebufferStatus = function(f) {\r\n    return function() {\r\n      if (contextLost_) {\r\n        return ctx.FRAMEBUFFER_UNSUPPORTED;\r\n      }\r\n      return f.apply(ctx, arguments);\r\n    };\r\n  }(wrapper_.checkFramebufferStatus);\r\n\r\n  wrapper_.getAttribLocation = function(f) {\r\n    return function() {\r\n      if (contextLost_) {\r\n        return -1;\r\n      }\r\n      return f.apply(ctx, arguments);\r\n    };\r\n  }(wrapper_.getAttribLocation);\r\n\r\n  wrapper_.getVertexAttribOffset = function(f) {\r\n    return function() {\r\n      if (contextLost_) {\r\n        return 0;\r\n      }\r\n      return f.apply(ctx, arguments);\r\n    };\r\n  }(wrapper_.getVertexAttribOffset);\r\n\r\n  wrapper_.isContextLost = function() {\r\n    return contextLost_;\r\n  };\r\n\r\n  function wrapEvent(listener) {\r\n    if (typeof(listener) == \"function\") {\r\n      return listener;\r\n    } else {\r\n      return function(info) {\r\n        listener.handleEvent(info);\r\n      }\r\n    }\r\n  }\r\n\r\n  wrapper_.registerOnContextLostListener = function(listener) {\r\n    onLost_ = wrapEvent(listener);\r\n  };\r\n\r\n  wrapper_.registerOnContextRestoredListener = function(listener) {\r\n    if (contextLost_) {\r\n      nextOnRestored_ = wrapEvent(listener);\r\n    } else {\r\n      onRestored_ = wrapEvent(listener);\r\n    }\r\n  }\r\n\r\n  return wrapper_;\r\n}\r\n\r\nreturn {\r\n  /**\r\n   * Initializes this module. Safe to call more than once.\r\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\r\n   *    you have more than one context it doesn't matter which one\r\n   *    you pass in, it is only used to pull out constants.\r\n   */\r\n  'init': init,\r\n\r\n  /**\r\n   * Returns true or false if value matches any WebGL enum\r\n   * @param {*} value Value to check if it might be an enum.\r\n   * @return {boolean} True if value matches one of the WebGL defined enums\r\n   */\r\n  'mightBeEnum': mightBeEnum,\r\n\r\n  /**\r\n   * Gets an string version of an WebGL enum.\r\n   *\r\n   * Example:\r\n   *   WebGLDebugUtil.init(ctx);\r\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\r\n   *\r\n   * @param {number} value Value to return an enum for\r\n   * @return {string} The string version of the enum.\r\n   */\r\n  'glEnumToString': glEnumToString,\r\n\r\n  /**\r\n   * Converts the argument of a WebGL function to a string.\r\n   * Attempts to convert enum arguments to strings.\r\n   *\r\n   * Example:\r\n   *   WebGLDebugUtil.init(ctx);\r\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 0, gl.TEXTURE_2D);\r\n   *\r\n   * would return 'TEXTURE_2D'\r\n   *\r\n   * @param {string} functionName the name of the WebGL function.\r\n   * @param {number} argumentIndx the index of the argument.\r\n   * @param {*} value The value of the argument.\r\n   * @return {string} The value as a string.\r\n   */\r\n  'glFunctionArgToString': glFunctionArgToString,\r\n\r\n  /**\r\n   * Given a WebGL context returns a wrapped context that calls\r\n   * gl.getError after every command and calls a function if the\r\n   * result is not NO_ERROR.\r\n   *\r\n   * You can supply your own function if you want. For example, if you'd like\r\n   * an exception thrown on any GL error you could do this\r\n   *\r\n   *    function throwOnGLError(err, funcName, args) {\r\n   *      throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to\" +\r\n   *            funcName;\r\n   *    };\r\n   *\r\n   *    ctx = WebGLDebugUtils.makeDebugContext(\r\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\r\n   *\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\r\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\r\n   *     to call when gl.getError returns an error. If not specified the default\r\n   *     function calls console.log with a message.\r\n   */\r\n  'makeDebugContext': makeDebugContext,\r\n\r\n  /**\r\n   * Given a WebGL context returns a wrapped context that adds 4\r\n   * functions.\r\n   *\r\n   * ctx.loseContext:\r\n   *   simulates a lost context event.\r\n   *\r\n   * ctx.restoreContext:\r\n   *   simulates the context being restored.\r\n   *\r\n   * ctx.registerOnContextLostListener(listener):\r\n   *   lets you register a listener for context lost. Use instead\r\n   *   of addEventListener('webglcontextlostevent', listener);\r\n   *\r\n   * ctx.registerOnContextRestoredListener(listener):\r\n   *   lets you register a listener for context restored. Use\r\n   *   instead of addEventListener('webglcontextrestored',\r\n   *   listener);\r\n   *\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\r\n   */\r\n  'makeLostContextSimulatingContext': makeLostContextSimulatingContext,\r\n\r\n  /**\r\n   * Resets a context to the initial state.\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to\r\n   *     reset.\r\n   */\r\n  'resetToInitialState': resetToInitialState\r\n};\r\n\r\n}();\r\n\r\n","import { WebGLUtils } from './webgl-utils'\r\nimport { WebGLDebugUtils } from './webgl-debug'\r\n\r\n// cuon-utils.js (c) 2012 kanda and matsuda\r\n/**\r\n * Create a program object and make current\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return true, if the program object was created and successfully made current \r\n */\r\nexport function initShaders(gl, vshader, fshader) {\r\n  var program = createProgram(gl, vshader, fshader);\r\n  if (!program) {\r\n    console.log('Failed to create program');\r\n    return false;\r\n  }\r\n\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Create the linked program object\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return created program object, or null if the creation has failed\r\n */\r\nexport function createProgram(gl, vshader, fshader) {\r\n  // Create shader object\r\n  var vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\r\n  var fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\r\n  if (!vertexShader || !fragmentShader) {\r\n    return null;\r\n  }\r\n\r\n  // Create a program object\r\n  var program = gl.createProgram();\r\n  if (!program) {\r\n    return null;\r\n  }\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n\r\n  // Link the program object\r\n  gl.linkProgram(program);\r\n\r\n  // Check the result of linking\r\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    var error = gl.getProgramInfoLog(program);\r\n    console.log('Failed to link program: ' + error);\r\n    gl.deleteProgram(program);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n    return null;\r\n  }\r\n  return program;\r\n}\r\n\r\n/**\r\n * Create a shader object\r\n * @param gl GL context\r\n * @param type the type of the shader object to be created\r\n * @param source shader program (string)\r\n * @return created shader object, or null if the creation has failed.\r\n */\r\nexport function loadShader(gl, type, source) {\r\n  // Create shader object\r\n  var shader = gl.createShader(type);\r\n  if (shader == null) {\r\n    console.log('unable to create shader');\r\n    return null;\r\n  }\r\n\r\n  // Set the shader program\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader\r\n  gl.compileShader(shader);\r\n\r\n  // Check the result of compilation\r\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    var error = gl.getShaderInfoLog(shader);\r\n    console.log('Failed to compile shader: ' + error);\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n/** \r\n * Initialize and get the rendering for WebGL\r\n * @param canvas <cavnas> element\r\n * @param opt_debug flag to initialize the context for debugging\r\n * @return the rendering context for WebGL\r\n */\r\nexport function getWebGLContext(canvas, opt_debug) {\r\n  // Get the rendering context for WebGL\r\n  var gl = WebGLUtils.setupWebGL(canvas);\r\n  if (!gl) return null;\r\n\r\n  // if opt_debug is explicitly false, create the context for debugging\r\n  if (arguments.length < 2 || opt_debug) {\r\n    gl = WebGLDebugUtils.makeDebugContext(gl);\r\n  }\r\n\r\n  return gl;\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { useEffect, useRef } from 'react'\r\nimport { getWebGLContext, initShaders } from '../lib/cuon-utils'\r\n\r\nexport default function Demo02() {\r\n  let ref = useRef()\r\n\r\n  useEffect(() => {\r\n    let canvas = ref.current\r\n    let gl = getWebGLContext(canvas)\r\n\r\n    let VSHADER_SOURCE = `\r\n      attribute vec4 a_Position;\r\n      attribute float a_PointSize;\r\n      void main() {\r\n        gl_Position = a_Position;\r\n        gl_PointSize = a_PointSize;\r\n      }\r\n    `\r\n\r\n    let FSHADER_SOURCE = `\r\n      void main() {\r\n        gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\r\n      }\r\n    `\r\n\r\n    let isSuccess = initShaders(gl, VSHADER_SOURCE, FSHADER_SOURCE)\r\n\r\n    if (!isSuccess) {\r\n      throw new Error('failed to initilize shaders')\r\n    }\r\n\r\n    let a_Position = gl.getAttribLocation(gl.program, 'a_Position')\r\n    let a_PointSize = gl.getAttribLocation(gl.program, 'a_PointSize')\r\n\r\n    if (a_Position < 0 || a_PointSize < 0) {\r\n      throw new Error('failed to get attribute location from webgl')\r\n    }\r\n\r\n    let render = (position, pointSize = 10) => {\r\n      gl.clearColor(0, 0, 0, 1)\r\n      gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n      gl.vertexAttrib3f(a_Position, ...position)\r\n      gl.vertexAttrib1f(a_PointSize, pointSize)\r\n      gl.drawArrays(gl.POINTS, 0, 1)\r\n    }\r\n\r\n    render([0, 0, 0])\r\n\r\n    let count = 0\r\n    setInterval(() => {\r\n      let angle = (count / 180) * Math.PI * 20\r\n      let x = Math.sin(angle) / 4\r\n      let y = Math.cos(angle) / 4\r\n\r\n      count = (count + 1) % 360\r\n      render([x, y, 0])\r\n    }, 1000 / 60)\r\n  }, [])\r\n\r\n  return <canvas width={400} height={400} ref={ref} />\r\n}\r\n"],"sourceRoot":""}