{"version":3,"sources":["lib/fgl.js","demo/Demo15.js"],"names":["createElement","type","props","_len","arguments","length","children","Array","_key","ELEMENT","Symbol","COMPONENT","FRAGMENT","create","factory","Error","concat","tag","render","element","root","regl","createRegl","result","init","cache","Map","tick","frame","renderer","record","cancel","destroy","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","list","draw","get","set","map","layer","elem","err","return","node","params","initElement","initComponent","addRecord","key","isArray","push","apply","toConsumableArray","flat","Infinity","child","obj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_ref5","objectSpread","contents","forEach","item","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref9","_ref8","View","clear","Triangle","frag","vert","attributes","position","uniforms","color","_ref10","batchId","Math","sin","cos","angle","_ref11","offset","prop","depth","enable","count","Bunny","bunny","positions","normal","normals","cells","model","_ref12","translate","mat4","identity","scale","view","_ref13","t","lookAt","projection","_ref14","viewportWidth","viewportHeight","perspective","PI","elements","TriangleWithBunny","Demo01","ref","useRef","useEffect","canvas","index","assign","test","current","_react_16_9_0_react_default","a","width","height","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/22.2c060b0e.chunk.js","sourcesContent":["/**\r\n * @jsx createElement\r\n */\r\nimport React from 'react'\r\nimport createRegl from 'regl'\r\nimport { createStore, watch, remove, isBistate } from 'bistate'\r\nimport bunny from 'bunny'\r\nimport normals from 'angle-normals'\r\nimport { mat4 } from 'gl-matrix'\r\n\r\nexport const createElement = (type, props, ...children) => {\r\n  return { type, props, children }\r\n}\r\n\r\nconst isValidElement = obj => !!(obj && obj.type)\r\n\r\nconst ELEMENT = Symbol('element')\r\nconst COMPONENT = Symbol('component')\r\nconst FRAGMENT = Symbol('fragment')\r\nconst CONTEXT = Symbol('context')\r\n\r\nconst Fragment = FRAGMENT\r\n\r\nexport const create = factory => {\r\n  if (typeof factory !== 'function') {\r\n    throw new Error(`Expected factory to be a function, but got ${factory}`)\r\n  }\r\n  return {\r\n    tag: ELEMENT,\r\n    factory\r\n  }\r\n}\r\n\r\nexport const render = (element, root) => {\r\n  let regl = createRegl(root)\r\n  let params = { regl, root }\r\n  let result = init(element)\r\n  let cache = new Map()\r\n\r\n  let tick = regl.frame(() => {\r\n    // regl.clear({\r\n    //   color: [0, 0, 0, 1]\r\n    // })\r\n    renderer(result.record, regl, cache)\r\n  })\r\n\r\n  return () => {\r\n    tick.cancel()\r\n    regl.destroy()\r\n  }\r\n}\r\n\r\nconst renderer = (record, regl, cache) => {\r\n  for (let [factory, list] of record) {\r\n    let draw = cache.get(factory) || factory(regl)\r\n\r\n    cache.set(factory, draw)\r\n\r\n    let propsList = list.map(layer => layer.elem.props)\r\n    draw(propsList)\r\n  }\r\n}\r\n\r\nconst init = (node, params) => {\r\n  if (node.type && (node.type.tag === ELEMENT || node.type === FRAGMENT)) {\r\n    return initElement(node, params)\r\n  } else if (typeof node.type === 'function') {\r\n    return initComponent(node, params)\r\n  }\r\n  throw new Error(`Unknown type of node ${node}`)\r\n}\r\n\r\nconst addRecord = (record, key, value) => {\r\n  let list = record.get(key) || []\r\n\r\n  if (Array.isArray(value)) {\r\n    list.push(...value)\r\n  } else {\r\n    list.push(value)\r\n  }\r\n\r\n  record.set(key, list)\r\n}\r\n\r\nconst initElement = (elem, params) => {\r\n  let { factory } = elem.type\r\n  let record = new Map()\r\n  let children = []\r\n  let layer = {\r\n    type: ELEMENT,\r\n    params,\r\n    factory,\r\n    elem,\r\n    record,\r\n    children\r\n  }\r\n\r\n  if (factory) {\r\n    addRecord(record, factory, layer)\r\n  }\r\n\r\n  elem.children.flat(Infinity).map(child => {\r\n    if (!isValidElement(child)) return\r\n\r\n    let layer = init(child, params)\r\n\r\n    for (let [key, value] of layer.record) {\r\n      addRecord(record, key, value)\r\n    }\r\n\r\n    children.push(layer)\r\n  })\r\n\r\n  return layer\r\n}\r\n\r\nconst initComponent = (elem, params) => {\r\n  let result = elem.type({\r\n    ...elem.props,\r\n    children: elem.children\r\n  })\r\n\r\n  let record = new Map()\r\n\r\n  let layer = {\r\n    type: COMPONENT,\r\n    params,\r\n    elem,\r\n    result,\r\n    record\r\n  }\r\n\r\n  if (!Array.isArray(result)) {\r\n    result = [result]\r\n  }\r\n\r\n  let contents = []\r\n\r\n  result.forEach(item => {\r\n    let layer = init(item, params)\r\n\r\n    contents.push(layer)\r\n\r\n    for (let [key, value] of layer.record) {\r\n      addRecord(record, key, value)\r\n    }\r\n  })\r\n\r\n  layer.contents = contents\r\n\r\n  return layer\r\n}\r\n\r\nconst View = create(regl => props => {\r\n  if (Array.isArray(props)) {\r\n    regl.clear(props[0])\r\n  } else {\r\n    regl.clear(props)\r\n  }\r\n})\r\n\r\nconst Triangle = create(regl =>\r\n  regl({\r\n    frag: `\r\n      precision mediump float;\r\n      uniform vec4 color;\r\n      void main() {\r\n        gl_FragColor = color;\r\n      }`,\r\n\r\n    vert: `\r\n      precision mediump float;\r\n      attribute vec2 position;\r\n      uniform float angle;\r\n      uniform vec2 offset;\r\n      void main() {\r\n        gl_Position = vec4(\r\n          cos(angle) * position.x + sin(angle) * position.y + offset.x,\r\n          -sin(angle) * position.x + cos(angle) * position.y + offset.y, 0, 1);\r\n      }`,\r\n\r\n    attributes: {\r\n      position: [0.5, 0, 0, 0.5, 1, 1]\r\n    },\r\n\r\n    uniforms: {\r\n      // the batchId parameter gives the index of the command\r\n      color: ({ tick }, props, batchId) => [\r\n        Math.sin(0.02 * ((0.1 + Math.sin(batchId)) * tick + 3.0 * batchId)),\r\n        Math.cos(0.02 * (0.02 * tick + 0.1 * batchId)),\r\n        Math.sin(\r\n          0.02 * ((0.3 + Math.cos(2.0 * batchId)) * tick + 0.8 * batchId)\r\n        ),\r\n        1\r\n      ],\r\n      angle: ({ tick }) => 0.01 * tick,\r\n      offset: regl.prop('offset')\r\n    },\r\n\r\n    depth: {\r\n      enable: false\r\n    },\r\n\r\n    count: 3\r\n  })\r\n)\r\n\r\nconst Bunny = create(regl =>\r\n  regl({\r\n    frag: `\r\n    precision mediump float;\r\n    varying vec3 vnormal;\r\n    void main () {\r\n      gl_FragColor = vec4(abs(vnormal), 1.0);\r\n    }`,\r\n    vert: `\r\n    precision mediump float;\r\n    uniform mat4 projection, view, model;\r\n    attribute vec3 position, normal;\r\n    varying vec3 vnormal;\r\n    void main () {\r\n      vnormal = normal;\r\n      gl_Position = projection * view * model * vec4(position, 1.0);\r\n    }`,\r\n    attributes: {\r\n      position: bunny.positions,\r\n      normal: normals(bunny.cells, bunny.positions)\r\n    },\r\n    uniforms: {\r\n      model: ({ tick }, props, batchId) => {\r\n        let translate = mat4.translate(mat4.identity([]), mat4.identity([]), [\r\n          props.offset[0] * 8,\r\n          props.offset[1] * 8,\r\n          0\r\n        ])\r\n        let scale = mat4.scale(mat4.identity([]), translate, [\r\n          props.scale,\r\n          props.scale,\r\n          props.scale\r\n        ])\r\n        return scale\r\n      },\r\n      view: ({ tick }) => {\r\n        const t = 0.01 * tick\r\n        return mat4.lookAt(\r\n          [],\r\n          [30 * Math.cos(t), 2.5, 30 * Math.sin(t)],\r\n          [0, 2.5, 0],\r\n          [0, 1, 0]\r\n        )\r\n      },\r\n      projection: ({ viewportWidth, viewportHeight }) =>\r\n        mat4.perspective(\r\n          [],\r\n          Math.PI / 4,\r\n          viewportWidth / viewportHeight,\r\n          0.01,\r\n          1000\r\n        )\r\n    },\r\n    elements: bunny.cells\r\n  })\r\n)\r\n\r\nconst TriangleWithBunny = props => {\r\n  return (\r\n    <Triangle offset={props.offset}>\r\n      <Bunny offset={props.offset} scale={0.5} />\r\n    </Triangle>\r\n  )\r\n}\r\n\r\nexport default function test(canvas) {\r\n  let propsList = [\r\n    { offset: [-1, -1] },\r\n    { offset: [-1, 0] },\r\n    { offset: [-1, 1] },\r\n    { offset: [0, -1] },\r\n    { offset: [0, 0] },\r\n    { offset: [0, 1] },\r\n    { offset: [1, -1] },\r\n    { offset: [1, 0] },\r\n    { offset: [1, 1] }\r\n  ]\r\n\r\n  return render(\r\n    <View color={[0, 0, 0, 1]}>\r\n      {propsList.map((props, index) => {\r\n        return <TriangleWithBunny {...props} key={index} />\r\n      })}\r\n    </View>,\r\n    canvas\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport test from '../lib/fgl'\r\n\r\nexport default function Demo01() {\r\n  let ref = useRef()\r\n\r\n  useEffect(() => {\r\n    let canvas = ref.current\r\n    return test(canvas)\r\n  }, [])\r\n\r\n  return <canvas width={400} height={400} ref={ref} />\r\n}\r\n"],"sourceRoot":""}