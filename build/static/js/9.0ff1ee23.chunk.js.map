{"version":3,"sources":["demo/util.js","demo/image/sky.jpg","demo/image/circle.gif","demo/Demo10.js"],"names":["__webpack_require__","d","__webpack_exports__","glsl","loadImageList","getPosition","createVertexList","createRotateZMatrix","createTranslateMatrix","createScaleMatrix","x","loadImage","src","Promise","resolve","reject","image","Image","onload","onerror","error","list","arguments","length","undefined","all","map","getX","rect","clientX","left","width","getY","clientY","height","top","canvas","event","getBoundingClientRect","Float32Array","flat","Infinity","createMatrix","sourceList","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","array","value","push","err","return","radian","Math","PI","sinB","sin","cosB","cos","y","z","scaleX","scaleY","scaleZ","module","exports","p","Demo02","ref","useRef","useEffect","current","gl","getContext","viewport","renderItem","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","raf","f","timer","render","requestAnimationFrame","cancelAnimationFrame","_ref","Object","D_Users_Jade_Documents_code_github_learn_webgl_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","D_Users_Jade_Documents_code_github_learn_webgl_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","mark","_callee","angle","item","wrap","_context","prev","makeItem","sent","abrupt","props","axis","vec3","fromValues","clearColor","clear","COLOR_BUFFER_BIT","stop","_x","apply","this","_ref2","_callee3","VSHADER_SOURCE","FSHADER_SOURCE","program","uniform","attribute","vertexList","FSIZE","VBO","imageSrcList","_ref3","_ref4","skyImage","circleImage","useProgram","useTexture","draw","identityM","rotateM","rotate","_context3","_templateObject","_templateObject2","makeProgram","vertex","fragment","getUniform","getAttribute","BYTES_PER_ELEMENT","makeVBO","type","ARRAY_BUFFER","enableAttributes","location","aPosition","size","stride","offset","aTexCoor","skyImageSrc","circleImageSrc","D_Users_Jade_Documents_code_github_learn_webgl_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","bindBuffer","attachTexture2D","unit","uSampler0","source","format","RGBA","UNSIGNED_BYTE","parameters","name","TEXTURE_MIN_FILTER","LINEAR","uSampler1","drawArrays","TRIANGLE_STRIP","mat4","create","_ref5","_callee2","_context2","uniformMatrix4fv","uRotateM","_x3","_x4","_x2","vshader","createShader","VERTEX_SHADER","fshader","FRAGMENT_SHADER","createProgram","shader","attachShader","linkProgram","message","getProgramInfoLog","Error","_ref6","shaderSource","compileShader","getShaderInfoLog","_ref7","_ref7$usage","usage","STATIC_DRAW","buffer","createBuffer","bufferData","bufferType","args","forEach","params","_params$type","FLOAT","_params$normalized","normalized","vertexAttribPointer","enableVertexAttribArray","count","getProgramParameter","ACTIVE_UNIFORMS","i","info","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","_ref8","_ref8$flipY","flipY","_ref8$parameters","texture","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","_ref9","texParameteri","D_Users_Jade_Documents_code_github_learn_webgl_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","level","texImage2D","uniform1i"],"mappings":"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","file":"static/js/9.0ff1ee23.chunk.js","sourcesContent":["export const glsl = x => x\r\n\r\nexport const loadImage = src => {\r\n  return new Promise((resolve, reject) => {\r\n    let image = new Image()\r\n    image.onload = () => resolve(image)\r\n    image.onerror = error => reject(error)\r\n    image.src = src\r\n  })\r\n}\r\n\r\nexport const loadImageList = (list = []) => {\r\n  return Promise.all(list.map(loadImage))\r\n}\r\n\r\nexport const getX = (rect, clientX) => {\r\n  return (clientX - rect.left - rect.width / 2) / (rect.width / 2)\r\n}\r\n\r\nexport const getY = (rect, clientY) => {\r\n  return (rect.height / 2 - (clientY - rect.top)) / (rect.height / 2)\r\n}\r\n\r\nexport const getPosition = (canvas, event) => {\r\n  let rect = canvas.getBoundingClientRect()\r\n  return [getX(rect, event.clientX), getY(rect, event.clientY)]\r\n}\r\n\r\nexport const createVertexList = (list = []) => {\r\n  return new Float32Array(list.flat(Infinity))\r\n}\r\n\r\n/**\r\n * [\r\n *    [1, 2, 3, 4],\r\n *    [5, 6, 7, 8],\r\n *    [9, 10, 11, 12],\r\n *    [13, 14, 15, 16]\r\n * ]\r\n */\r\nexport const createMatrix = sourceList => {\r\n  let data = [[], [], [], []]\r\n\r\n  for (let array of sourceList) {\r\n    data[0].push(array[0])\r\n    data[1].push(array[1])\r\n    data[2].push(array[2])\r\n    data[3].push(array[3])\r\n  }\r\n\r\n  return new Float32Array(data.flat())\r\n}\r\n\r\nexport const createRotateZMatrix = (angle = 0) => {\r\n  let radian = (angle * Math.PI) / 180\r\n  let sinB = Math.sin(radian)\r\n  let cosB = Math.cos(radian)\r\n\r\n  return createMatrix([\r\n    [cosB, -sinB, 0.0, 0.0],\r\n    [sinB, cosB, 0.0, 0.0],\r\n    [0.0, 0.0, 1.0, 0.0],\r\n    [0.0, 0.0, 0.0, 1.0]\r\n  ])\r\n}\r\n\r\nexport const createTranslateMatrix = (x = 0, y = 0, z = 0) => {\r\n  return createMatrix([\r\n    [1.0, 0.0, 0.0, x],\r\n    [0.0, 1.0, 0.0, y],\r\n    [0.0, 0.0, 1.0, z],\r\n    [0.0, 0.0, 0.0, 1.0]\r\n  ])\r\n}\r\n\r\nexport const createScaleMatrix = (scaleX = 1, scaleY = 1, scaleZ = 1) => {\r\n  return createMatrix([\r\n    [scaleX, 0.0, 0.0, 0],\r\n    [0, scaleY, 0, 0],\r\n    [0, 0, scaleZ, 0],\r\n    [0, 0, 0, 1]\r\n  ])\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/sky.2b11efd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/circle.def06678.gif\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport { mat4, vec3 } from 'gl-matrix'\r\nimport * as dat from 'dat.gui'\r\nimport { loadImageList, glsl, createVertexList } from './util'\r\nimport skyImageSrc from './image/sky.jpg'\r\nimport circleImageSrc from './image/circle.gif'\r\n\r\nexport default function Demo02() {\r\n  let ref = useRef()\r\n\r\n  useEffect(() => {\r\n    let canvas = ref.current\r\n    let gl = canvas.getContext('webgl')\r\n    gl.viewport(0, 0, canvas.width, canvas.height)\r\n    renderItem(gl)\r\n  }, [])\r\n\r\n  return <canvas width={400} height={400} ref={ref} />\r\n}\r\n\r\nconst raf = f => {\r\n  let timer = null\r\n  let render = () => {\r\n    f()\r\n    timer = requestAnimationFrame(render)\r\n  }\r\n  render()\r\n  return () => cancelAnimationFrame(timer)\r\n}\r\n\r\nconst renderItem = async gl => {\r\n  let angle = 0\r\n  let item = await makeItem(gl)\r\n  return raf(() => {\r\n    let radian = ((angle % 360) * Math.PI) / 180\r\n    let axis = vec3.fromValues(0, 0, 1)\r\n    let props = {\r\n      radian,\r\n      axis\r\n    }\r\n\r\n    gl.clearColor(0, 0, 0, 1)\r\n    gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n    item.render(props)\r\n    angle += 1\r\n  })\r\n}\r\n\r\nconst makeItem = async gl => {\r\n  let VSHADER_SOURCE = glsl`\r\n    attribute vec4 aPosition;\r\n    attribute vec2 aTexCoor;\r\n    uniform mat4 uRotateM;\r\n    varying vec2 vTexCoor;\r\n    void main() {\r\n      gl_Position = uRotateM * aPosition;\r\n      vTexCoor = aTexCoor;\r\n    }\r\n  `\r\n\r\n  let FSHADER_SOURCE = glsl`\r\n    precision mediump float;\r\n    varying vec2 vTexCoor;\r\n    uniform sampler2D uSampler0;\r\n    uniform sampler2D uSampler1;\r\n    void main() {\r\n      vec4 color0 = texture2D(uSampler0, vTexCoor);\r\n      vec4 color1 = texture2D(uSampler1, vTexCoor);\r\n      gl_FragColor = color0 * color1;\r\n    }\r\n  `\r\n\r\n  let program = makeProgram(gl, {\r\n    vertex: VSHADER_SOURCE,\r\n    fragment: FSHADER_SOURCE\r\n  })\r\n\r\n  let uniform = getUniform(gl, program)\r\n  let attribute = getAttribute(gl, program)\r\n\r\n  let vertexList = createVertexList([\r\n    [[-0.5, 0.5], [0.0, 1.0]],\r\n    [[-0.5, -0.5], [0.0, 0.0]],\r\n    [[0.5, 0.5], [1.0, 1.0]],\r\n    [[0.5, -0.5], [1.0, 0.0]]\r\n  ])\r\n\r\n  let FSIZE = vertexList.BYTES_PER_ELEMENT\r\n\r\n  let VBO = makeVBO(gl, {\r\n    type: gl.ARRAY_BUFFER,\r\n    data: vertexList\r\n  })\r\n\r\n  enableAttributes(gl, gl.ARRAY_BUFFER, VBO, [\r\n    {\r\n      location: attribute.aPosition,\r\n      size: 2,\r\n      stride: FSIZE * 4,\r\n      offset: 0\r\n    },\r\n    {\r\n      location: attribute.aTexCoor,\r\n      size: 2,\r\n      stride: FSIZE * 4,\r\n      offset: FSIZE * 2\r\n    }\r\n  ])\r\n\r\n  let imageSrcList = [skyImageSrc, circleImageSrc]\r\n  let [skyImage, circleImage] = await loadImageList(imageSrcList)\r\n\r\n  let useProgram = () => {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, VBO)\r\n    gl.useProgram(program)\r\n  }\r\n\r\n  let useTexture = () => {\r\n    attachTexture2D(gl, {\r\n      unit: 0,\r\n      location: uniform.uSampler0,\r\n      image: {\r\n        source: skyImage,\r\n        format: gl.RGBA,\r\n        type: gl.UNSIGNED_BYTE\r\n      },\r\n      parameters: [\r\n        {\r\n          name: gl.TEXTURE_MIN_FILTER,\r\n          value: gl.LINEAR\r\n        }\r\n      ]\r\n    })\r\n\r\n    attachTexture2D(gl, {\r\n      unit: 1,\r\n      location: uniform.uSampler1,\r\n      image: {\r\n        source: circleImage,\r\n        format: gl.RGBA,\r\n        type: gl.UNSIGNED_BYTE\r\n      },\r\n      parameters: [\r\n        {\r\n          name: gl.TEXTURE_MIN_FILTER,\r\n          value: gl.LINEAR\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  let draw = () => {\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\r\n  }\r\n\r\n  let identityM = mat4.create()\r\n  let rotateM = mat4.create()\r\n  let rotate = async (radian, axis) => {\r\n    mat4.rotate(rotateM, identityM, radian, axis)\r\n    gl.uniformMatrix4fv(uniform.uRotateM, false, rotateM)\r\n  }\r\n\r\n  let render = props => {\r\n    useProgram()\r\n    useTexture()\r\n    rotate(props.radian, props.axis)\r\n    draw()\r\n  }\r\n\r\n  return { render }\r\n}\r\n\r\nconst makeProgram = (gl, source) => {\r\n  let vshader = createShader(gl, {\r\n    type: gl.VERTEX_SHADER,\r\n    source: source.vertex\r\n  })\r\n  let fshader = createShader(gl, {\r\n    type: gl.FRAGMENT_SHADER,\r\n    source: source.fragment\r\n  })\r\n  let program = createProgram(gl, {\r\n    vertex: vshader,\r\n    fragment: fshader\r\n  })\r\n\r\n  return program\r\n}\r\n\r\nconst createProgram = (gl, shader) => {\r\n  let program = gl.createProgram()\r\n\r\n  gl.attachShader(program, shader.vertex)\r\n  gl.attachShader(program, shader.fragment)\r\n  gl.linkProgram(program)\r\n\r\n  let message = gl.getProgramInfoLog(program)\r\n  if (message) throw new Error(message)\r\n  return program\r\n}\r\n\r\nconst createShader = (gl, { type, source }) => {\r\n  let shader = gl.createShader(type)\r\n\r\n  gl.shaderSource(shader, source)\r\n  gl.compileShader(shader)\r\n\r\n  let message = gl.getShaderInfoLog(shader)\r\n  if (message) throw new Error(message)\r\n  return shader\r\n}\r\n\r\nconst makeVBO = (gl, { type, data, usage = gl.STATIC_DRAW }) => {\r\n  let buffer = gl.createBuffer()\r\n  gl.bindBuffer(type, buffer)\r\n  gl.bufferData(type, data, usage)\r\n  // unbind\r\n  gl.bindBuffer(type, null)\r\n  return buffer\r\n}\r\n\r\nconst enableAttributes = (gl, bufferType, VBO, args = []) => {\r\n  gl.bindBuffer(bufferType, VBO)\r\n  args.forEach(params => {\r\n    let {\r\n      location,\r\n      size,\r\n      type = gl.FLOAT,\r\n      normalized = false,\r\n      stride,\r\n      offset\r\n    } = params\r\n    gl.vertexAttribPointer(location, size, type, normalized, stride, offset)\r\n    gl.enableVertexAttribArray(location)\r\n  })\r\n  gl.bindBuffer(bufferType, null)\r\n}\r\n\r\nconst getUniform = (gl, program) => {\r\n  let count = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)\r\n  let uniform = {}\r\n  for (let i = 0; i < count; i++) {\r\n    const info = gl.getActiveUniform(program, i)\r\n    uniform[info.name] = gl.getUniformLocation(program, info.name)\r\n  }\r\n  return uniform\r\n}\r\n\r\nconst getAttribute = (gl, program) => {\r\n  let count = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)\r\n  let attribute = {}\r\n  for (let i = 0; i < count; i++) {\r\n    const info = gl.getActiveAttrib(program, i)\r\n    attribute[info.name] = gl.getAttribLocation(program, info.name)\r\n  }\r\n  return attribute\r\n}\r\n\r\nconst attachTexture2D = (\r\n  gl,\r\n  { location, unit, image, flipY = true, parameters = [] }\r\n) => {\r\n  let texture = gl.createTexture()\r\n\r\n  if (flipY) gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1)\r\n\r\n  gl.activeTexture(gl.TEXTURE0 + unit)\r\n  gl.bindTexture(gl.TEXTURE_2D, texture)\r\n\r\n  parameters.forEach(({ name, value }) => {\r\n    gl.texParameteri(gl.TEXTURE_2D, name, value)\r\n  })\r\n\r\n  image = {\r\n    level: 0,\r\n    format: gl.RGBA,\r\n    type: gl.UNSIGNED_BYTE,\r\n    ...image\r\n  }\r\n\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    image.level,\r\n    image.format,\r\n    image.format,\r\n    image.type,\r\n    image.source\r\n  )\r\n\r\n  gl.uniform1i(location, unit)\r\n\r\n  return texture\r\n}\r\n"],"sourceRoot":""}